{
  "manifest": {
    "name": "vite-plugin-vue-inspector",
    "version": "3.7.2",
    "description": "jump to local IDE source code while click the element of browser automatically.",
    "author": {
      "name": "webfansplz"
    },
    "license": "MIT",
    "homepage": "https://github.com/webfansplz/vite-plugin-vue-inspector#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/webfansplz/vite-plugin-vue-inspector.git"
    },
    "bugs": {
      "url": "https://github.com/webfansplz/vite-plugin-vue-inspector/issues"
    },
    "keywords": [
      "vue",
      "vite",
      "vscode",
      "vite-plugin",
      "inspector",
      "debug"
    ],
    "exports": {
      ".": {
        "types": "./dist/index.d.ts",
        "require": "./dist/index.cjs",
        "import": "./dist/index.mjs"
      },
      "./src/*": "./src/*"
    },
    "main": "./dist/index.cjs",
    "module": "./dist/index.mjs",
    "types": "./dist/index.d.ts",
    "files": [
      "dist",
      "src/load.js",
      "src/Overlay.vue"
    ],
    "peerDependencies": {
      "vite": "^3.0.0-0 || ^4.0.0-0"
    },
    "dependencies": {
      "@babel/core": "^7.22.17",
      "@babel/plugin-proposal-decorators": "^7.22.15",
      "@babel/plugin-syntax-import-attributes": "^7.22.5",
      "@babel/plugin-syntax-import-meta": "^7.10.4",
      "@babel/plugin-transform-typescript": "^7.22.15",
      "@vue/babel-plugin-jsx": "^1.1.1",
      "@vue/compiler-dom": "^3.2.47",
      "kolorist": "^1.7.0",
      "magic-string": "^0.30.0"
    },
    "devDependencies": {
      "@types/babel__core": "^7.20.0",
      "unplugin": "^1.3.1"
    },
    "scripts": {
      "lint": "eslint --fix --ext .js,.ts,.vue .",
      "dev": "tsup --watch",
      "build": "tsup"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-vite-plugin-vue-inspector-3.7.2-3406eb648c3063bd9505437b35c1d8253e937f89-integrity/node_modules/vite-plugin-vue-inspector/package.json",
    "readmeFilename": "README.md",
    "readme": "\n<p align=\"center\">\n<a href=\"https://github.com/webfansplz/vite-plugin-vue-inspector\"><img src=\"./logo.svg\" width=\"180\" alt=\"vite-plugin-vue-inspector\"></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/vite-plugin-vue-inspector\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://badgen.net/npm/v/vite-plugin-vue-inspector\" alt=\"NPM Version\" /></a>\n  <a href=\"https://www.npmjs.com/package/vite-plugin-vue-inspector\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://badgen.net/npm/dt/vite-plugin-vue-inspector\" alt=\"NPM Downloads\" /></a>\n  <a href=\"https://github.com/webfansplz/vite-plugin-vue-inspector/blob/master/LICENSE\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://badgen.net/github/license/webfansplz/vite-plugin-vue-inspector\" alt=\"License\" /></a>\n</p>\n\n<p align=\"center\">\n<a href=\"https://stackblitz.com/edit/vitejs-vite-rbr2as?file=src%2FApp.vue\"><img src=\"https://developer.stackblitz.com/img/open_in_stackblitz.svg\" alt=\"\"></a>\n</p>\n\n## üìñ Introduction\n\nA vite plugin which provides the ability that to jump to the local IDE when you click the element of browser automatically. It supports Vue2 & 3 & SSR.\n\n<p align=\"center\">\n<img src=\"./public/preview.gif\" alt=\"vite-plugin-vue-inspector\">\n</p>\n\n## üì¶ Installation\n\n```bash\n\n# vite-plugin-vue-inspector \n\npnpm install vite-plugin-vue-inspector -D\n\n# unplugin-vue-inspector\n\npnpm install unplugin-vue-inspector -D\n\n```\n\n## ü¶Ñ Usage\n\n### Configuration Vite\n\n```ts\n// for Vue2\n\nimport { defineConfig, } from 'vite'\nimport { createVuePlugin, } from 'vite-plugin-vue2'\nimport Inspector from 'unplugin-vue-inspector/vite' // OR vite-plugin-vue-inspector\n\nexport default defineConfig({\n  plugins: [\n    createVuePlugin(),\n    Inspector({\n      vue: 2\n    }),\n  ],\n})\n```\n\n```ts\n// for Vue3\n\nimport { defineConfig } from 'vite'\nimport Vue from '@vitejs/plugin-vue'\nimport Inspector from 'unplugin-vue-inspector/vite' // OR vite-plugin-vue-inspector\n\nexport default defineConfig({\n  plugins: [Vue(), Inspector()],\n})\n```\n\n```ts\n// for Nuxt3\n// nuxt.config.ts\nimport { defineNuxtConfig } from 'nuxt/config'\nimport Inspector from 'vite-plugin-vue-inspector'\n\nexport default defineNuxtConfig({\n  modules: [\n    ['unplugin-vue-inspector/nuxt', {\n      enabled: true,\n      toggleButtonVisibility: 'always',\n    }],\n  ],\n})\n```\n\n### Options\n\n\n```ts\ninterface VitePluginInspectorOptions {\n  /**\n  * Vue version\n  * @default 3\n  */\n  vue?: 2 | 3\n\n  /**\n  * Default enable state\n  * @default false\n  */\n  enabled?: boolean\n\n  /**\n  * Define a combo key to toggle inspector\n  * @default 'control-shift' on windows, 'meta-shift' on other os\n  *\n  * any number of modifiers `control` `shift` `alt` `meta` followed by zero or one regular key, separated by -\n  * examples: control-shift, control-o, control-alt-s  meta-x control-meta\n  * Some keys have native behavior (e.g. alt-s opens history menu on firefox).\n  * To avoid conflicts or accidentally typing into inputs, modifier only combinations are recommended.\n  * You can also disable it by setting `false`.\n  */\n  toggleComboKey?: string | false\n\n  /**\n  * Toggle button visibility\n  * @default 'active'\n  */\n  toggleButtonVisibility?: 'always' | 'active' | 'never'\n\n  /**\n  * Toggle button display position\n  * @default top-right\n  */\n  toggleButtonPos?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left'\n\n  /**\n  * append an import to the module id ending with `appendTo` instead of adding a script into body\n  * useful for frameworks that do not support trannsformIndexHtml hook (e.g. Nuxt3)\n  *\n  * WARNING: only set this if you know exactly what it does.\n  */\n  appendTo?: string | RegExp\n\n  /**\n  * Customize openInEditor host (e.g. http://localhost:3000)\n  * @default false\n  */\n  openInEditorHost?: string | false\n}\n```\n\n### Example\n\n- [Vue2](https://github.com/webfansplz/vite-plugin-vue-inspector/tree/main/packages/playground/vue2)\n- [Vue3](https://github.com/webfansplz/vite-plugin-vue-inspector/tree/main/packages/playground/vue3)\n- [Nuxt3](https://github.com/webfansplz/vite-plugin-vue-inspector/tree/main/packages/playground/nuxt)\n\n## üîå  Configuration IDE / Editor\n\nIt uses an **environment variable** named **`VUE_EDITOR`** to specify an IDE application, but if you do not set this variable, it will try to open a common IDE that you have open or installed once it is certified.\n\nFor example, if you want it always open VS Code when inspection clicked, set `export VUE_EDITOR=code` in your shell.\n\n\n### VS Code\n\n- install VS Code command line tools, [see the official docs](https://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line)\n  ![install-vscode-cli](./public/install-vscode-cli.png)\n\n- set env to shell, like `.bashrc` or `.zshrc`  \n\n  ```bash\n  export VUE_EDITOR=code\n  ```\n\n<br />\n\n### VS Code with WSL (Windows)\n\n- add the configuration in the `settings.json`\n\n- restart the VS Code (All Windows should be closed to take effect)\n\n```json\n{\n  // other config...\n\n  \"terminal.integrated.env.linux\": {\n    \"EDITOR\": \"code\"\n  }\n}\n```\n\n\n### WebStorm  \n\n- just set env with an absolute path to shell, like `.bashrc` or `.zshrc` (only MacOS)  \n\n  ```bash\n  export VUE_EDITOR='/Applications/WebStorm.app/Contents/MacOS/webstorm'\n  ```\n\n**OR**\n\n- install WebStorm command line tools\n\n- then set env to shell, like `.bashrc` or `.zshrc`  \n\n  ```bash\n  export VUE_EDITOR=webstorm\n  ```\n\n<br />\n\n### Vim\n\nYes! you can also use vim if you want, just set env to shell\n\n```bash\nexport VUE_EDITOR=vim\n```\n\n<br />\n\n## üí° Notice\n\n- **[BREAKING CHANGE] From v1.0, `enabled` option default value changed from `true` to `false` .**\n- It only work in develop mode .\n- It does not currently support `Template Engine (e.g. pug)` .\n\n## üë®‚Äçüíª Programmatic Usage\n\nYou can also use control inspector programmatically, by accessing the `__VUE_INSPECTOR__` global variable.\n\n```ts\nimport type { VueInspectorClient } from 'vite-plugin-vue-inspector'\n\nconst inspector: VueInspectorClient = window.__VUE_INSPECTOR__\n\nif (inspector) {\n  // enable inspector\n  inspector.enable()\n  // or\n  inspector.disable()\n}\n```\n\n## üå∏ Credits\n\nThis project is inspired by [react-dev-inspector](https://github.com/zthxxx/react-dev-inspector) .\n\nPartially implementation is inspired by [vite-plugin-svelte-inspector](https://github.com/sveltejs/vite-plugin-svelte/tree/main/packages/vite-plugin-svelte/src/ui/inspector) .\n\n## ü§ñÔ∏è Analysis of Theory\n\n[Chinese] [ÁÇπÂáªÈ°µÈù¢ÂÖÉÁ¥†,Ëøô‰∏™ViteÊèí‰ª∂Â∏ÆÊàëÊâìÂºÄ‰∫ÜVueÁªÑ‰ª∂](https://juejin.cn/post/7077347158545924127)\n## üìÑ License\n\n[MIT LICENSE](./LICENSE)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2022 webfansplz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vite-plugin-vue-inspector/-/vite-plugin-vue-inspector-3.7.2.tgz#3406eb648c3063bd9505437b35c1d8253e937f89",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vite-plugin-vue-inspector/-/vite-plugin-vue-inspector-3.7.2.tgz",
    "hash": "3406eb648c3063bd9505437b35c1d8253e937f89",
    "integrity": "sha512-PSe/t2RoVzB64Ofuec7W/Z0FuKHzmU7esLrMOGwX+BNyXt8dAMtYbz4wL/TqoH1zVPDdjQecQpM5+K9VnBYpAg==",
    "registry": "npm",
    "packageName": "vite-plugin-vue-inspector",
    "cacheIntegrity": "sha512-PSe/t2RoVzB64Ofuec7W/Z0FuKHzmU7esLrMOGwX+BNyXt8dAMtYbz4wL/TqoH1zVPDdjQecQpM5+K9VnBYpAg== sha1-NAbrZIwwY72VBUN7NcHYJT6Tf4k="
  },
  "registry": "npm",
  "hash": "3406eb648c3063bd9505437b35c1d8253e937f89"
}