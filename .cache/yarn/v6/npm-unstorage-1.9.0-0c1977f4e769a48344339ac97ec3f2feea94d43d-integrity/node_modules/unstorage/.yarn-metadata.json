{
  "manifest": {
    "name": "unstorage",
    "version": "1.9.0",
    "description": "Universal Storage Layer",
    "repository": {
      "type": "git",
      "url": "https://github.com/unjs/unstorage.git"
    },
    "license": "MIT",
    "sideEffects": false,
    "exports": {
      "./drivers/*": {
        "types": "./drivers/*.d.ts",
        "import": "./drivers/*.mjs",
        "require": "./drivers/*.cjs"
      },
      ".": {
        "types": "./dist/index.d.ts",
        "import": "./dist/index.mjs",
        "require": "./dist/index.cjs"
      },
      "./server": {
        "types": "./dist/server.d.ts",
        "import": "./dist/server.mjs",
        "require": "./dist/server.cjs"
      }
    },
    "main": "./dist/index.cjs",
    "module": "./dist/index.mjs",
    "types": "./dist/index.d.ts",
    "files": [
      "dist",
      "drivers",
      "server.d.ts"
    ],
    "dependencies": {
      "anymatch": "^3.1.3",
      "chokidar": "^3.5.3",
      "destr": "^2.0.1",
      "h3": "^1.7.1",
      "ioredis": "^5.3.2",
      "listhen": "^1.2.2",
      "lru-cache": "^10.0.0",
      "mri": "^1.2.0",
      "node-fetch-native": "^1.2.0",
      "ofetch": "^1.1.1",
      "ufo": "^1.2.0"
    },
    "devDependencies": {
      "@azure/app-configuration": "^1.4.1",
      "@azure/cosmos": "^3.17.3",
      "@azure/data-tables": "^13.2.2",
      "@azure/identity": "^3.2.4",
      "@azure/keyvault-secrets": "^4.7.0",
      "@azure/storage-blob": "^12.15.0",
      "@capacitor/preferences": "^5.0.6",
      "@cloudflare/workers-types": "^4.20230801.0",
      "@planetscale/database": "^1.10.0",
      "@types/ioredis-mock": "^8.2.2",
      "@types/jsdom": "^21.1.1",
      "@types/mri": "^1.1.1",
      "@types/node": "^20.4.8",
      "@upstash/redis": "^1.22.0",
      "@vercel/kv": "^0.2.2",
      "@vitejs/plugin-vue": "^4.2.3",
      "@vitest/coverage-v8": "^0.34.1",
      "@vue/compiler-sfc": "^3.3.4",
      "azurite": "^3.25.1",
      "changelogen": "^0.5.4",
      "eslint": "^8.46.0",
      "eslint-config-unjs": "^0.2.1",
      "fake-indexeddb": "^4.0.1",
      "idb-keyval": "^6.2.1",
      "ioredis-mock": "^8.8.1",
      "jiti": "^1.19.1",
      "jsdom": "^22.1.0",
      "monaco-editor": "^0.41.0",
      "mongodb": "^5.7.0",
      "mongodb-memory-server": "^8.14.0",
      "msw": "^1.2.3",
      "prettier": "^3.0.1",
      "types-cloudflare-worker": "^1.2.0",
      "typescript": "^5.1.6",
      "unbuild": "^1.2.1",
      "vite": "^4.4.9",
      "vitest": "^0.34.1",
      "vue": "^3.3.4"
    },
    "peerDependencies": {
      "@azure/app-configuration": "^1.4.1",
      "@azure/cosmos": "^3.17.3",
      "@azure/data-tables": "^13.2.2",
      "@azure/identity": "^3.2.3",
      "@azure/keyvault-secrets": "^4.7.0",
      "@azure/storage-blob": "^12.14.0",
      "@capacitor/preferences": "^5.0.0",
      "idb-keyval": "^6.2.1",
      "@planetscale/database": "^1.8.0",
      "@upstash/redis": "^1.22.0",
      "@vercel/kv": "^0.2.2"
    },
    "peerDependenciesMeta": {
      "@azure/app-configuration": {
        "optional": true
      },
      "@azure/cosmos": {
        "optional": true
      },
      "@azure/data-tables": {
        "optional": true
      },
      "@azure/identity": {
        "optional": true
      },
      "@azure/keyvault-secrets": {
        "optional": true
      },
      "@azure/storage-blob": {
        "optional": true
      },
      "@capacitor/preferences": {
        "optional": true
      },
      "@planetscale/database": {
        "optional": true
      },
      "@upstash/redis": {
        "optional": true
      },
      "@vercel/kv": {
        "optional": true
      },
      "idb-keyval": {
        "optional": true
      }
    },
    "packageManager": "pnpm@8.6.7",
    "scripts": {
      "build": "unbuild",
      "demo": "vite demo",
      "dev": "vitest",
      "lint": "eslint --ext .ts . && prettier -c src test demo docs/content",
      "lint:fix": "eslint --ext .ts . --fix && prettier -w src test demo docs/content",
      "release": "pnpm test && changelogen --release && git push --follow-tags && pnpm publish",
      "test": "pnpm lint && pnpm test:types && vitest run --coverage",
      "test:types": "tsc --noEmit --skipLibCheck",
      "unstorage": "pnpm jiti src/cli"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-unstorage-1.9.0-0c1977f4e769a48344339ac97ec3f2feea94d43d-integrity/node_modules/unstorage/package.json",
    "readmeFilename": "README.md",
    "readme": "# ðŸ’¾ Unstorage\n\n[![npm version][npm-version-src]][npm-version-href]\n[![npm downloads][npm-downloads-src]][npm-downloads-href]\n[![Codecov][codecov-src]][codecov-href]\n[![bundle][bundle-src]][bundle-href]\n[![License][license-src]][license-href]\n\n<!--[![Github Actions][github-actions-src]][github-actions-href]-->\n\nUnstorage provides an async Key-Value storage API with conventional features like multi driver mounting, watching and working with metadata, dozens of built-in drivers and a [tiny core](https://bundlephobia.com/package/unstorage).\n\nðŸ‘‰ [Documentation](https://unstorage.unjs.io)\n\n## Features\n\n- Designed for all environments: Browser, NodeJS, and Workers\n- Lots of Built-in drivers\n- Asynchronous API\n- Unix-style driver mounting to combine storages\n- Default [in-memory](https://unstorage.unjs.io/drivers/memory) storage\n- Tree-shakable utils and tiny core\n- Auto JSON value serialization and deserialization\n- Binary and raw value support\n- State [snapshots](https://unstorage.unjs.io/utils#snapshots) and hydration\n- Storage watcher\n- HTTP Storage with [built-in server](https://unstorage.unjs.io/http-server)\n\n## Usage\n\nInstall `unstorage` npm package:\n\n```sh\n# yarn\nyarn add unstorage\n\n# npm\nnpm install unstorage\n\n# pnpm\npnpm add unstorage\n```\n\n```js\nimport { createStorage } from \"unstorage\";\n\nconst storage = createStorage(/* opts */);\n\nawait storage.getItem(\"foo:bar\"); // or storage.getItem('/foo/bar')\n```\n\nðŸ‘‰ Check out the [the documentation](https://unstorage.unjs.io) for usage information.\n\n## Contribution\n\n- Clone repository\n- Install dependencies with `pnpm install`\n- Use `pnpm dev` to start jest watcher verifying changes\n- Use `pnpm test` before pushing to ensure all tests and lint checks passing\n\n## License\n\n[MIT](./LICENSE)\n\n<!-- Badges -->\n\n[npm-version-src]: https://img.shields.io/npm/v/unstorage?style=flat&colorA=18181B&colorB=F0DB4F\n[npm-version-href]: https://npmjs.com/package/unstorage\n[npm-downloads-src]: https://img.shields.io/npm/dm/unstorage?style=flat&colorA=18181B&colorB=F0DB4F\n[npm-downloads-href]: https://npmjs.com/package/unstorage\n[github-actions-src]: https://img.shields.io/github/workflow/status/unjs/unstorage/ci/main?style=flat&colorA=18181B&colorB=F0DB4F\n[github-actions-href]: https://github.com/unjs/unstorage/actions?query=workflow%3Aci\n[codecov-src]: https://img.shields.io/codecov/c/gh/unjs/unstorage/main?style=flat&colorA=18181B&colorB=F0DB4F\n[codecov-href]: https://codecov.io/gh/unjs/unstorage\n[bundle-src]: https://img.shields.io/bundlephobia/minzip/unstorage?style=flat&colorA=18181B&colorB=F0DB4F\n[bundle-href]: https://bundlephobia.com/result?p=unstorage\n[license-src]: https://img.shields.io/github/license/unjs/unstorage.svg?style=flat&colorA=18181B&colorB=F0DB4F\n[license-href]: https://github.com/unjs/unstorage/blob/main/LICENSE\n",
    "licenseText": "MIT License\n\nCopyright (c) Pooya Parsa <pooya@pi0.io>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/unstorage/-/unstorage-1.9.0.tgz#0c1977f4e769a48344339ac97ec3f2feea94d43d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/unstorage/-/unstorage-1.9.0.tgz",
    "hash": "0c1977f4e769a48344339ac97ec3f2feea94d43d",
    "integrity": "sha512-VpD8ZEYc/le8DZCrny3bnqKE4ZjioQxBRnWE+j5sGNvziPjeDlaS1NaFFHzl/kkXaO3r7UaF8MGQrs14+1B4pQ==",
    "registry": "npm",
    "packageName": "unstorage",
    "cacheIntegrity": "sha512-VpD8ZEYc/le8DZCrny3bnqKE4ZjioQxBRnWE+j5sGNvziPjeDlaS1NaFFHzl/kkXaO3r7UaF8MGQrs14+1B4pQ== sha1-DBl39OdppINEM5rJfsPy/uqU1D0="
  },
  "registry": "npm",
  "hash": "0c1977f4e769a48344339ac97ec3f2feea94d43d"
}