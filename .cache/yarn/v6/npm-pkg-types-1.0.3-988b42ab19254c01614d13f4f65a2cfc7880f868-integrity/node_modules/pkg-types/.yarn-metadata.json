{
  "manifest": {
    "name": "pkg-types",
    "version": "1.0.3",
    "description": "Node.js utilities and TypeScript definitions for `package.json` and `tsconfig.json`",
    "license": "MIT",
    "main": "./dist/index.cjs",
    "sideEffects": false,
    "exports": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.mjs",
      "require": "./dist/index.cjs"
    },
    "types": "./dist/index.d.ts",
    "repository": {
      "type": "git",
      "url": "https://github.com/unjs/pkg-types.git"
    },
    "files": [
      "dist"
    ],
    "scripts": {
      "prepack": "unbuild",
      "dev": "vitest",
      "release": "pnpm test && changelogen --release && npm publish && git push --follow-tags",
      "lint": "eslint --ext .ts,.js,.mjs,.cjs . && prettier -c src test",
      "lint:fix": "eslint --fix --ext .ts,.js,.mjs,.cjs . && prettier -w src test",
      "test": "vitest run --coverage",
      "test:types": "tsc --noEmit --module esnext --skipLibCheck --moduleResolution node ./test/*.test.ts"
    },
    "dependencies": {
      "jsonc-parser": "^3.2.0",
      "mlly": "^1.2.0",
      "pathe": "^1.1.0"
    },
    "devDependencies": {
      "@types/node": "^18.16.3",
      "@vitest/coverage-c8": "^0.30.1",
      "changelogen": "^0.5.3",
      "eslint": "^8.39.0",
      "eslint-config-unjs": "^0.1.0",
      "expect-type": "^0.15.0",
      "jiti": "^1.18.2",
      "prettier": "^2.8.8",
      "typescript": "^5.0.4",
      "unbuild": "^1.2.1",
      "vitest": "^0.30.1"
    },
    "packageManager": "pnpm@8.3.1",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-pkg-types-1.0.3-988b42ab19254c01614d13f4f65a2cfc7880f868-integrity/node_modules/pkg-types/package.json",
    "readmeFilename": "README.md",
    "readme": "# pkg-types\n\n> Node.js utilities and TypeScript definitions for `package.json` and `tsconfig.json`\n\n```\n＼⍩⃝／\n```\n\n## Install\n\n```sh\n# npm\nnpm i pkg-types\n\n# yarn\nyarn add pkg-types\n\n# pnpm\npnpm add pkg-types\n```\n\n## Usage\n\n### `readPackageJSON`\n\n```js\nimport { readPackageJSON } from 'pkg-types'\nconst localPackageJson = await readPackageJSON()\n// or\nconst packageJson = await readPackageJSON('/fully/resolved/path/to/folder')\n```\n\n### `writePackageJSON`\n\n```js\nimport { writePackageJSON } from 'pkg-types'\n\nawait writePackageJSON('path/to/package.json', pkg)\n```\n\n### `resolvePackageJSON`\n\n```js\nimport { resolvePackageJSON } from 'pkg-types'\nconst filename = await resolvePackageJSON()\n// or\nconst packageJson = await resolvePackageJSON('/fully/resolved/path/to/folder')\n```\n\n### `readTSConfig`\n\n```js\nimport { readTSConfig } from 'pkg-types'\nconst tsconfig = await readTSConfig()\n// or\nconst tsconfig = await readTSConfig('/fully/resolved/path/to/folder')\n```\n\n### `writeTSConfig`\n\n```js\nimport { writeTSConfig } from 'pkg-types'\n\nawait writeTSConfig('path/to/tsconfig.json', tsconfig)\n```\n\n### `resolveTSConfig`\n\n```js\nimport { resolveTSConfig } from 'pkg-types'\nconst filename = await resolveTSConfig()\n// or\nconst tsconfig = await resolveTSConfig('/fully/resolved/path/to/folder')\n```\n\n### `resolveFile`\n\n```js\nimport { resolveFile } from 'pkg-types'\nconst filename = await resolveFile('README.md', {\n  startingFrom: id,\n  rootPattern: /^node_modules$/,\n  matcher: filename => filename.endsWith('.md'),\n})\n```\n\n### `resolveLockFile`\n\nFind path to the lock file (`yarn.lock`, `package-lock.json`, `pnpm-lock.yaml`, `npm-shrinkwrap.json`) or throws an error.\n\n```js\nimport { resolveLockFile } from 'pkg-types'\nconst lockfile = await resolveLockFile('.')\n```\n\n### `findWorkspaceDir`\n\nTry to detect workspace dir by in order:\n\n1. Nearest `.git` directory\n2. Farthest lockfile\n3. Farthest `package.json` file\n\nIf fails, throws an error.\n\n```js\nimport { findWorkspaceDir } from 'pkg-types'\nconst workspaceDir = await findWorkspaceDir('.')\n```\n\n## Types\n\n**Note:** In order to make types working, you need to install `typescript` as a devDependency.\n\nYou can directly use typed interfaces:\n\n```ts\nimport type { TSConfig, PackageJSON } from 'pkg-types'\n```\n\nYou can also use define utils for type support for using in plain `.js` files and auto-complete in IDE.\n\n```js\nimport type { definePackageJSON } from 'pkg-types'\n\nconst pkg = definePackageJSON({})\n```\n\n```js\nimport type { defineTSConfig } from 'pkg-types'\n\nconst pkg = defineTSConfig({})\n```\n\n## Alternatives\n\n- [dominikg/tsconfck](https://github.com/dominikg/tsconfck)\n\n## License\n\nMIT - Made with 💛\n",
    "licenseText": "MIT License\n\nCopyright (c) Pooya Parsa <pooya@pi0.io> - Daniel Roe <daniel@roe.dev>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n--------------------------------------------------------------------------------\n\nCopyright Joyent, Inc. and other Node contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\nNO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\nUSE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/pkg-types/-/pkg-types-1.0.3.tgz#988b42ab19254c01614d13f4f65a2cfc7880f868",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/pkg-types/-/pkg-types-1.0.3.tgz",
    "hash": "988b42ab19254c01614d13f4f65a2cfc7880f868",
    "integrity": "sha512-nN7pYi0AQqJnoLPC9eHFQ8AcyaixBUOwvqc5TDnIKCMEE6I0y8P7OKA7fPexsXGCGxQDl/cmrLAp26LhcwxZ4A==",
    "registry": "npm",
    "packageName": "pkg-types",
    "cacheIntegrity": "sha512-nN7pYi0AQqJnoLPC9eHFQ8AcyaixBUOwvqc5TDnIKCMEE6I0y8P7OKA7fPexsXGCGxQDl/cmrLAp26LhcwxZ4A== sha1-mItCqxklTAFhTRP09los/HiA+Gg="
  },
  "registry": "npm",
  "hash": "988b42ab19254c01614d13f4f65a2cfc7880f868"
}