{
  "manifest": {
    "name": "knitwork",
    "version": "1.0.0",
    "description": "[![npm version][npm-version-src]][npm-version-href] [![npm downloads][npm-downloads-src]][npm-downloads-href] [![Github Actions][github-actions-src]][github-actions-href] [![Codecov][codecov-src]][codecov-href]",
    "repository": {
      "type": "git",
      "url": "https://github.com/unjs/knitwork.git"
    },
    "license": "MIT",
    "sideEffects": false,
    "type": "module",
    "exports": {
      ".": {
        "import": "./dist/index.mjs",
        "types": "./dist/index.d.ts",
        "require": "./dist/index.cjs"
      }
    },
    "main": "./dist/index.cjs",
    "module": "./dist/index.mjs",
    "types": "./dist/index.d.ts",
    "files": [
      "dist"
    ],
    "scripts": {
      "build": "unbuild",
      "dev": "vitest dev",
      "lint": "eslint --ext .ts,.js,.mjs,.cjs .",
      "prepack": "unbuild",
      "release": "pnpm test && standard-version && git push --follow-tags && pnpm publish",
      "test": "vitest run --coverage"
    },
    "devDependencies": {
      "@vitest/coverage-c8": "^0.25.2",
      "esbuild": "^0.15.13",
      "eslint": "latest",
      "eslint-config-unjs": "^0.0.2",
      "standard-version": "^9.5.0",
      "typescript": "^4.8.4",
      "unbuild": "^0.9.4",
      "vitest": "^0.25.2"
    },
    "packageManager": "pnpm@7.16.0",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-knitwork-1.0.0-38d124dead875bee5feea1733632295af58a49d2-integrity/node_modules/knitwork/package.json",
    "readmeFilename": "README.md",
    "readme": "# ðŸ§¶ knitwork\n\n[![npm version][npm-version-src]][npm-version-href]\n[![npm downloads][npm-downloads-src]][npm-downloads-href]\n[![Github Actions][github-actions-src]][github-actions-href]\n[![Codecov][codecov-src]][codecov-href]\n\n> Utilities to generate JavaScript code.\n\n## Install\n\n```sh\n# npm\nnpm install knitwork\n\n# yarn\nyarn add knitwork\n\n# pnpm\npnpm install knitwork\n```\n\n## Usage\n\n**Generating ESM syntax:**\n\n```js\nimport { genImport, genExport } from 'knitwork'\n\n// import foo from \"pkg\"\nconsole.log(genImport('pkg', 'foo'))\n\n// import { foo } from \"pkg\"\nconsole.log(genImport('pkg', ['foo']))\n\n// import { a, b } from \"pkg\"\nconsole.log(genImport('pkg', ['a', 'b']))\n\n// import foo as bar from \"pkg\";\nconsole.log(genImport('pkg', { name: 'foo', as: 'bar' }))\n\n// import { foo as bar } from \"pkg\";\nconsole.log(genImport('pkg', [{ name: 'foo', as: 'bar' }]))\n\n// import foo from \"pkg\" assert { type: \"json\" };\nconsole.log(genImport('pkg', 'foo', { assert: { type: 'json' } }))\n\n// export foo from \"pkg\"\nconsole.log(genExport('pkg', 'foo'))\n\n// export { a, b } from \"pkg\"\nconsole.log(genExport('pkg', ['a', 'b']))\n\n// export * as bar from \"pkg\"\nconsole.log(genExport('pkg', { name: '*', as: 'bar' }))\n\n// export foo from \"pkg\" assert { type: \"json\" };\nconsole.log(genExport('pkg', 'foo', { assert: { type: 'json' } }))\n```\n\n**Generating TS:**\n\n```js\nimport { genInterface, genAugmentation, genInlineTypeImport, genTypeImport, genTypeExport } from 'knitwork'\n\n// interface FooInterface extends A, B {\n//   name: boolean\n//   optional?: string\n// }\nconsole.log(genInterface('FooInterface', { name: 'boolean', 'optional?': 'string' }, { extends: ['A', 'B'] }))\n// declare module \"my-module\" {\n//   interface MyInterface {}\n// }\nconsole.log(genAugmentation('my-module', { MyInterface: {} }))\n// typeof import(\"my-module\").genString'\nconsole.log(genInlineTypeImport('my-module', 'genString'))\n// typeof import(\"my-module\").default'\nconsole.log(genInlineTypeImport('my-module'))\n// import type { test as value } from \"my-module\";\nconsole.log(genTypeImport('my-module', [{ name: 'test', as: 'value' }]))\n// export type { test } from \"my-module\";\nconsole.log(genTypeExport('my-module', ['test']))\n```\n\n**Serializing JS objects:**\n\n```js\nimport { genObjectFromRaw, genObjectFromRawEntries, genArrayFromRaw } from 'knitwork'\n\n// { test: () => import(\"pkg\") }\nconsole.log(genObjectFromRaw({ test: '() => import(\"pkg\")' }))\n\n// { 0: [ test, () => import(\"pkg\") ] }\nconsole.log(genObjectFromRaw([ ['test', '() => import(\"pkg\")'] ]))\n\nconst entries = Object.entries({\n  a: 1, b: null, c: '\"c\"', nest: { hello: '\"world\"', fn: () => 1 }\n})\n// { a: 1, b: null, c: \"c\", nest: { hello: \"world\", fn: () => 1 } }\nconsole.log(genObjectFromRawEntries(entries))\n\n// [ 1, 2, () => import(\"pkg\") ]\nconsole.log(genArrayFromRaw(['1', '2', '() => import(\"pkg\")']))\n```\n\n**Generating safe variable names:**\n\n```js\nimport { genSafeVariableName } from 'knitwork'\n\n// _123_32foo\ngenSafeVariableName('123 foo')\n// _for\ngenSafeVariableName('for')\n```\n\n## ðŸ’» Development\n\n- Clone this repository\n- Enable [Corepack](https://github.com/nodejs/corepack) using `corepack enable` (use `npm i -g corepack` for Node.js < 16.10)\n- Install dependencies using `pnpm install`\n- Run interactive tests using `pnpm dev`\n\n## License\n\nMade with ðŸ’›\n\nPublished under [MIT License](./LICENSE).\n\n<!-- Badges -->\n[npm-version-src]: https://img.shields.io/npm/v/knitwork?style=flat-square\n[npm-version-href]: https://npmjs.com/package/knitwork\n\n[npm-downloads-src]: https://img.shields.io/npm/dm/knitwork?style=flat-square\n[npm-downloads-href]: https://npmjs.com/package/knitwork\n\n[github-actions-src]: https://img.shields.io/github/workflow/status/unjs/knitwork/ci/main?style=flat-square\n[github-actions-href]: https://github.com/unjs/knitwork/actions?query=workflow%3Aci\n\n[codecov-src]: https://img.shields.io/codecov/c/gh/unjs/knitwork/main?style=flat-square\n[codecov-href]: https://codecov.io/gh/unjs/knitwork\n",
    "licenseText": "MIT License\n\nCopyright (c) Pooya Parsa <pooya@pi0.io>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/knitwork/-/knitwork-1.0.0.tgz#38d124dead875bee5feea1733632295af58a49d2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/knitwork/-/knitwork-1.0.0.tgz",
    "hash": "38d124dead875bee5feea1733632295af58a49d2",
    "integrity": "sha512-dWl0Dbjm6Xm+kDxhPQJsCBTxrJzuGl0aP9rhr+TG8D3l+GL90N8O8lYUi7dTSAN2uuDqCtNgb6aEuQH5wsiV8Q==",
    "registry": "npm",
    "packageName": "knitwork",
    "cacheIntegrity": "sha512-dWl0Dbjm6Xm+kDxhPQJsCBTxrJzuGl0aP9rhr+TG8D3l+GL90N8O8lYUi7dTSAN2uuDqCtNgb6aEuQH5wsiV8Q== sha1-ONEk3q2HW+5f7qFzNjIpWvWKSdI="
  },
  "registry": "npm",
  "hash": "38d124dead875bee5feea1733632295af58a49d2"
}