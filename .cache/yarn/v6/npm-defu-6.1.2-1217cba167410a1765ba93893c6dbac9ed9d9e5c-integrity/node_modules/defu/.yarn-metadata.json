{
  "manifest": {
    "name": "defu",
    "version": "6.1.2",
    "description": "Recursively assign default properties. Lightweight and Fast!",
    "repository": {
      "type": "git",
      "url": "https://github.com/unjs/defu.git"
    },
    "license": "MIT",
    "exports": {
      ".": {
        "types": "./dist/defu.d.ts",
        "require": "./dist/defu.cjs",
        "import": "./dist/defu.mjs"
      }
    },
    "main": "./dist/defu.cjs",
    "module": "./dist/defu.mjs",
    "types": "./dist/defu.d.ts",
    "files": [
      "dist"
    ],
    "scripts": {
      "build": "unbuild",
      "dev": "vitest",
      "lint": "eslint --ext .ts src && prettier -c src test",
      "prepack": "pnpm build",
      "release": "pnpm test && changelogen --release && git push --follow-tags && pnpm publish",
      "test": "pnpm lint && pnpm vitest run",
      "test:types": "tsc --noEmit"
    },
    "devDependencies": {
      "@types/node": "^18.11.18",
      "@vitest/coverage-c8": "^0.28.1",
      "changelogen": "^0.4.1",
      "eslint": "^8.32.0",
      "eslint-config-unjs": "^0.1.0",
      "expect-type": "^0.15.0",
      "prettier": "^2.8.3",
      "typescript": "^4.9.4",
      "unbuild": "^1.1.1",
      "vitest": "^0.28.1"
    },
    "packageManager": "pnpm@7.25.1",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-defu-6.1.2-1217cba167410a1765ba93893c6dbac9ed9d9e5c-integrity/node_modules/defu/package.json",
    "readmeFilename": "README.md",
    "readme": "![defu](.github/banner.svg)\n\n# ðŸŒŠ defu\n\n> Assign default properties, recursively. Lightweight and Fast!\n\n[![Standard JS][standard-src]][standard-href]\n[![codecov][codecov-src]][codecov-href]\n[![npm version][npm-v-src]][npm-v-href]\n[![npm downloads][npm-dm-src]][npm-dm-href]\n[![package phobia][packagephobia-src]][packagephobia-href]\n[![bundle phobia][bundlephobia-src]][bundlephobia-href]\n\n## Install\n\nInstall package:\n\n```bash\n# yarn\nyarn add defu\n# npm\nnpm install defu\n# pnpm\npnpm install defu\n```\n\n## Usage\n\n```js\nimport { defu } from 'defu'\n\nconst options = defu(object, ...defaults)\n```\n\nLeftmost arguments have more priority when assigning defaults.\n\n### Arguments\n\n- **object (Object):** The destination object.\n- **source (Object):** The source object.\n\n```js\nimport { defu } from 'defu'\n\nconsole.log(defu({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } }))\n// => { a: { b: 2, c: 3 } }\n```\n\n### Using with CommonJS\n\n```js\nconst { defu } = require('defu')\n```\n\n## Custom Merger\n\nSometimes default merging strategy is not desirable. Using `createDefu` we can create a custom instance with different merging strategy.\n\nThis function accepts `obj` (source object), `key` and `value` (current value) and should return `true` if applied custom merging.\n\n**Example:** Sum numbers instead of overriding\n\n```js\nimport { createDefu } from 'defu'\n\nconst ext = createDefu((obj, key, value) => {\n  if (typeof obj[key] === 'number' && typeof value === 'number') {\n    obj[key] += val\n    return true\n  }\n})\n\next({ cost: 15 }, { cost: 10 }) // { cost: 25 }\n```\n\n## Function Merger\n\nUsing `defuFn`, if user provided a function, it will be called with default value instead of merging.\n\nI can be useful for default values manipulation.\n\n**Example:** Filter some items from defaults (array) and add 20 to the count default value.\n\n```js\nimport { defuFn } from 'defu'\n\ndefuFn({\n  ignore: (val) => val.filter(item => item !== 'dist'),\n  count: (count) => count + 20\n }, {\n   ignore: ['node_modules','dist'],\n   count: 10\n })\n /*\n {\n    ignore: ['node_modules'],\n    count: 30\n  }\n  */\n```\n\n**Note:** if the default value is not defined, the function defined won't be called and kept as value.\n\n## Array Function Merger\n\n`defuArrayFn` is similar to `defuFn` but **only applies to array values defined in defaults**.\n\n**Example:** Filter some items from defaults (array) and add 20 to the count default value.\n\n```js\nimport { defuArrayFn } from 'defu'\n\ndefuArrayFn({\n  ignore(val) => val.filter(i => i !== 'dist'),\n  count: () => 20\n }, {\n   ignore: [\n     'node_modules',\n     'dist'\n   ],\n   count: 10\n })\n /*\n  {\n    ignore: ['node_modules'],\n    count: () => 20\n  }\n  */\n```\n\n**Note:** the function is called only if the value defined in defaults is an aray.\n\n### Remarks\n\n- `object` and `defaults` are not modified\n- Nullish values ([`null`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null) and [`undefined`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined)) are skipped. Please use [defaults-deep](https://www.npmjs.com/package/defaults-deep) or [omit-deep](http://npmjs.com/package/omit-deep) or [lodash.defaultsdeep](https://www.npmjs.com/package/lodash.defaultsdeep) if you need to preserve or different behavior.\n- Assignment of `__proto__` and `constructor` keys will be skipped to prevent security issues with object pollution.\n- Will concat `array` values (if default property is defined)\n```js\nconsole.log(defu({ array: ['b', 'c'] }, { array: ['a'] }))\n// => { array: ['a', 'b', 'c']}\n```\n\n## Type\n\nWe expose `Defu` as a type utility to return a merged type that follows the rules that defu follows.\n\n```js\nimport type { Defu } from 'defu'\n\ntype Options = Defu<{ foo: 'bar' }, [{}, { bar: 'baz' }, { something: 42 }]>\n// returns { foo: 'bar', bar: 'baz', 'something': 42 }\n```\n\n## License\n\nMIT. Made with ðŸ’–\n\n<!-- Refs -->\n[standard-src]: https://flat.badgen.net/badge/code%20style/standard/green\n[standard-href]: https://standardjs.com\n\n[npm-v-src]: https://flat.badgen.net/npm/v/defu/latest\n[npm-v-href]: https://npmjs.com/package/defu\n\n[npm-dm-src]: https://flat.badgen.net/npm/dm/defu\n[npm-dm-href]: https://npmjs.com/package/defu\n\n[packagephobia-src]: https://flat.badgen.net/packagephobia/install/defu\n[packagephobia-href]: https://packagephobia.now.sh/result?p=defu\n\n[bundlephobia-src]: https://flat.badgen.net/bundlephobia/min/defu\n[bundlephobia-href]: https://bundlephobia.com/result?p=defu\n\n[codecov-src]: https://flat.badgen.net/codecov/c/github/unjs/defu/master\n[codecov-href]: https://codecov.io/gh/unjs/defu\n",
    "licenseText": "MIT License\n\nCopyright (c) Pooya Parsa <pooya@pi0.io>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/defu/-/defu-6.1.2.tgz#1217cba167410a1765ba93893c6dbac9ed9d9e5c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/defu/-/defu-6.1.2.tgz",
    "hash": "1217cba167410a1765ba93893c6dbac9ed9d9e5c",
    "integrity": "sha512-+uO4+qr7msjNNWKYPHqN/3+Dx3NFkmIzayk2L1MyZQlvgZb/J1A0fo410dpKrN2SnqFjt8n4JL8fDJE0wIgjFQ==",
    "registry": "npm",
    "packageName": "defu",
    "cacheIntegrity": "sha512-+uO4+qr7msjNNWKYPHqN/3+Dx3NFkmIzayk2L1MyZQlvgZb/J1A0fo410dpKrN2SnqFjt8n4JL8fDJE0wIgjFQ== sha1-EhfLoWdBChdlupOJPG26ye2dnlw="
  },
  "registry": "npm",
  "hash": "1217cba167410a1765ba93893c6dbac9ed9d9e5c"
}