{
  "manifest": {
    "name": "@kwsites/file-exists",
    "version": "1.1.1",
    "main": "./dist/index.js",
    "types": "./dist/index.d.ts",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git@github.com:kwsites/file-exists.git"
    },
    "author": {
      "name": "Steve King",
      "email": "steve@mydev.co"
    },
    "contributors": [
      {
        "name": "Steve King",
        "email": "steve@mydev.co"
      }
    ],
    "files": [
      "dist/**/*.*"
    ],
    "scripts": {
      "clean": "rimraf ./dist",
      "build": "yarn run clean && tsc",
      "preversion": "yarn run clean && yarn run build && yarn test",
      "postversion": "npm publish --access=public && git push && git push --tags",
      "test": "jest --coverage",
      "tsc": "tsc"
    },
    "devDependencies": {
      "@babel/core": "^7.10.1",
      "@babel/preset-env": "^7.10.1",
      "@babel/preset-typescript": "^7.10.1",
      "@types/debug": "^4.1.5",
      "@types/jest": "^26.0.0",
      "@types/node": "^10.12.0",
      "babel-jest": "^26.0.1",
      "jest": "^25.3.0",
      "rimraf": "^2.6.2",
      "ts-node": "^8.10.2",
      "typescript": "^3.1.3"
    },
    "dependencies": {
      "debug": "^4.1.1"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@kwsites-file-exists-1.1.1-ad1efcac13e1987d8dbaf235ef3be5b0d96faa99-integrity/node_modules/@kwsites/file-exists/package.json",
    "readmeFilename": "readme.md",
    "readme": "# @kwsites/file-exists\n\nSynchronous validation of a path existing either as a file or as a directory.\n\n```\nconst { exists, FILE, FOLDER, READABLE } = require('@kwsites/file-exists');\n\n// check for a folder existing\nassert(exists(__dirname, FOLDER));\nassert(!exists(__filename, FOLDER));\n\n// check for a file existing\nassert(!exists(__filename, FILE));\nassert(exists(__filename, FILE));\n\n// when no type is specified, both folders and files are allowed\nassert(exists(__dirname));\nassert(exists(__filename));\n\n// alternatively specify both files and folders\nassert(exists(__dirname, FILE + FOLDER));\n\n// or just that the path is readable (can be either a file or folder)\nassert(exists(__filename, READABLE));\n```\n\n## Troubleshooting\n\nThis library uses [debug](https://www.npmjs.com/package/debug) to handle logging,\nto enable logging, use either the environment variable:\n\n```\n\"DEBUG=@kwsites/file-exists\" node ./your-app.js \n``` \n\nOr explicitly enable logging using the `debug` library itself:\n\n```javascript\nrequire('debug').enable('@kwsites/file-exists');\n``` \n\n",
    "description": "Synchronous validation of a path existing either as a file or as a directory.",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Steve King\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@kwsites/file-exists/-/file-exists-1.1.1.tgz#ad1efcac13e1987d8dbaf235ef3be5b0d96faa99",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@kwsites/file-exists/-/file-exists-1.1.1.tgz",
    "hash": "ad1efcac13e1987d8dbaf235ef3be5b0d96faa99",
    "integrity": "sha512-m9/5YGR18lIwxSFDwfE3oA7bWuq9kdau6ugN4H2rJeyhFQZcG9AgSHkQtSD15a8WvTgfz9aikZMrKPHvbpqFiw==",
    "registry": "npm",
    "packageName": "@kwsites/file-exists",
    "cacheIntegrity": "sha512-m9/5YGR18lIwxSFDwfE3oA7bWuq9kdau6ugN4H2rJeyhFQZcG9AgSHkQtSD15a8WvTgfz9aikZMrKPHvbpqFiw== sha1-rR78rBPhmH2NuvI17zvlsNlvqpk="
  },
  "registry": "npm",
  "hash": "ad1efcac13e1987d8dbaf235ef3be5b0d96faa99"
}