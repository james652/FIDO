{
  "manifest": {
    "name": "parse-git-config",
    "description": "Parse `.git/config` into a JavaScript object. sync or async.",
    "version": "3.0.0",
    "homepage": "https://github.com/jonschlinkert/parse-git-config",
    "author": {
      "name": "Jon Schlinkert",
      "url": "https://github.com/jonschlinkert"
    },
    "contributors": [
      {
        "name": "j. suárez",
        "url": "http://suarez.systems"
      },
      {
        "name": "Jon Schlinkert",
        "url": "http://twitter.com/jonschlinkert"
      },
      {
        "name": "Sam Holmes",
        "url": "https://samholmes.net"
      }
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/jonschlinkert/parse-git-config.git"
    },
    "bugs": {
      "url": "https://github.com/jonschlinkert/parse-git-config/issues"
    },
    "license": "MIT",
    "files": [
      "index.js"
    ],
    "main": "index.js",
    "engines": {
      "node": ">=8"
    },
    "scripts": {
      "test": "mocha"
    },
    "dependencies": {
      "git-config-path": "^2.0.0",
      "ini": "^1.3.5"
    },
    "devDependencies": {
      "gulp-format-md": "^2.0.0",
      "mocha": "^5.2.0"
    },
    "keywords": [
      "config",
      "git",
      "parse"
    ],
    "verb": {
      "run": true,
      "toc": false,
      "layout": "default",
      "tasks": [
        "readme"
      ],
      "plugins": [
        "gulp-format-md"
      ],
      "related": {
        "list": [
          "git-user-name",
          "git-username",
          "parse-author",
          "parse-authors",
          "parse-github-url",
          "parse-gitignore"
        ]
      },
      "lint": {
        "reflinks": true
      }
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-parse-git-config-3.0.0-4a2de08c7b74a2555efa5ae94d40cd44302a6132-integrity/node_modules/parse-git-config/package.json",
    "readmeFilename": "README.md",
    "readme": "# parse-git-config [![NPM version](https://img.shields.io/npm/v/parse-git-config.svg?style=flat)](https://www.npmjs.com/package/parse-git-config) [![NPM monthly downloads](https://img.shields.io/npm/dm/parse-git-config.svg?style=flat)](https://npmjs.org/package/parse-git-config) [![NPM total downloads](https://img.shields.io/npm/dt/parse-git-config.svg?style=flat)](https://npmjs.org/package/parse-git-config) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/parse-git-config.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/parse-git-config)\n\n> Parse `.git/config` into a JavaScript object. sync or async.\n\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save parse-git-config\n```\n\n## Usage\n\n```js\nconst parse = require('parse-git-config');\n\n// sync\nconsole.log(parse.sync());\n\n// using async/await\n(async () => console.log(await parse()))();\n```\n\n## Options\n\n### cwd\n\nThe starting directory to search from.\n\n**Type**: `string`\n\n**Default**: `process.cwd()` (current working directory)\n\n### path\n\nEither the absolute path to .git `config`, or the path relative to the current working directory.\n\n**Type**: `string`\n\n**Default**: `.git/config`\n\n### Examples config object\n\nParsed config object will look something like:\n\n```js\n{ core:\n   { repositoryformatversion: '0',\n     filemode: true,\n     bare: false,\n     logallrefupdates: true,\n     ignorecase: true,\n     precomposeunicode: true },\n  'remote \"origin\"':\n   { url: 'https://github.com/jonschlinkert/parse-git-config.git',\n     fetch: '+refs/heads/*:refs/remotes/origin/*' },\n  'branch \"master\"': { remote: 'origin', merge: 'refs/heads/master', ... } }\n```\n\n## API\n\n### [parse](index.js#L42)\n\nAsynchronously parse a `.git/config` file. If only the callback is passed, the `.git/config` file relative to `process.cwd()` is used.\n\n**Params**\n\n* `options` **{Object|String|Function}**: Options with `cwd` or `path`, the cwd to use, or the callback function.\n* `callback` **{Function}**: callback function if the first argument is options or cwd.\n* `returns` **{Object}**\n\n**Example**\n\n```js\nparse((err, config) => {\n  if (err) throw err;\n  // do stuff with config\n});\n\n// or, using async/await\n(async () => {\n  console.log(await parse());\n  console.log(await parse({ cwd: 'foo' }));\n  console.log(await parse({ cwd: 'foo', path: 'some/.git/config' }));\n})();\n```\n\n### [.sync](index.js#L88)\n\nSynchronously parse a `.git/config` file. If no arguments are passed, the `.git/config` file relative to `process.cwd()` is used.\n\n**Params**\n\n* `options` **{Object|String}**: Options with `cwd` or `path`, or the cwd to use.\n* `returns` **{Object}**\n\n**Example**\n\n```js\nconsole.log(parse.sync());\nconsole.log(parse.sync({ cwd: 'foo' }));\nconsole.log(parse.sync({ cwd: 'foo', path: 'some/.git/config' }));\n```\n\n### [.expandKeys](index.js#L134)\n\nReturns an object with only the properties that had ini-style keys converted to objects.\n\n**Params**\n\n* `config` **{Object}**: The parsed git config object.\n* `returns` **{Object}**\n\n**Example**\n\n```js\nconst config = parse.sync({ path: '/path/to/.gitconfig' });\nconst obj = parse.expandKeys(config);\n```\n\n### .expandKeys examples\n\nConverts ini-style keys into objects:\n\n**Example 1**\n\n```js\nconst parse = require('parse-git-config');\nconst config = { \n  'foo \"bar\"': { doStuff: true },\n  'foo \"baz\"': { doStuff: true } \n};\n\nconsole.log(parse.expandKeys(config));\n```\n\nResults in:\n\n```js\n{ \n  foo: { \n    bar: { doStuff: true }, \n    baz: { doStuff: true } \n  } \n}\n```\n\n**Example 2**\n\n```js\nconst parse = require('parse-git-config');\nconst config = {\n  'remote \"origin\"': { \n    url: 'https://github.com/jonschlinkert/normalize-pkg.git',\n    fetch: '+refs/heads/*:refs/remotes/origin/*' \n  },\n  'branch \"master\"': { \n    remote: 'origin', \n    merge: 'refs/heads/master' \n  },\n  'branch \"dev\"': { \n    remote: 'origin', \n    merge: 'refs/heads/dev', \n    rebase: true \n  }\n};\n\nconsole.log(parse.expandKeys(config));\n```\n\nResults in:\n\n```js\n{\n  remote: {\n    origin: {\n      url: 'https://github.com/jonschlinkert/normalize-pkg.git',\n      fetch: '+refs/heads/*:refs/remotes/origin/*'\n    }\n  },\n  branch: {\n    master: {\n      remote: 'origin',\n      merge: 'refs/heads/master'\n    },\n    dev: {\n      remote: 'origin',\n      merge: 'refs/heads/dev',\n      rebase: true\n    }\n  }\n}\n```\n\n## About\n\n<details>\n<summary><strong>Contributing</strong></summary>\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n</details>\n\n<details>\n<summary><strong>Running Tests</strong></summary>\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n</details>\n\n<details>\n<summary><strong>Building docs</strong></summary>\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n</details>\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [git-user-name](https://www.npmjs.com/package/git-user-name): Get a user's name from git config at the project or global scope, depending on… [more](https://github.com/jonschlinkert/git-user-name) | [homepage](https://github.com/jonschlinkert/git-user-name \"Get a user's name from git config at the project or global scope, depending on what git uses in the current context.\")\n* [git-username](https://www.npmjs.com/package/git-username): Get the username (or 'owner' name) from a git/GitHub remote origin URL. | [homepage](https://github.com/jonschlinkert/git-username \"Get the username (or 'owner' name) from a git/GitHub remote origin URL.\")\n* [parse-author](https://www.npmjs.com/package/parse-author): Parse an author, contributor, maintainer or other 'person' string into an object with name, email… [more](https://github.com/jonschlinkert/parse-author) | [homepage](https://github.com/jonschlinkert/parse-author \"Parse an author, contributor, maintainer or other 'person' string into an object with name, email and url properties following npm conventions.\")\n* [parse-authors](https://www.npmjs.com/package/parse-authors): Parse a string into an array of objects with `name`, `email` and `url` properties following… [more](https://github.com/jonschlinkert/parse-authors) | [homepage](https://github.com/jonschlinkert/parse-authors \"Parse a string into an array of objects with `name`, `email` and `url` properties following npm conventions. Useful for the `authors` property in package.json or for parsing an AUTHORS file into an array of authors objects.\")\n* [parse-github-url](https://www.npmjs.com/package/parse-github-url): Parse a github URL into an object. | [homepage](https://github.com/jonschlinkert/parse-github-url \"Parse a github URL into an object.\")\n* [parse-gitignore](https://www.npmjs.com/package/parse-gitignore): Parse a .gitignore or .npmignore file into an array of patterns. | [homepage](https://github.com/jonschlinkert/parse-gitignore \"Parse a .gitignore or .npmignore file into an array of patterns.\")\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 66 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 4  | [doowb](https://github.com/doowb) |  \n| 1  | [daviwil](https://github.com/daviwil) |  \n| 1  | [LexSwed](https://github.com/LexSwed) |  \n| 1  | [sam3d](https://github.com/sam3d) |  \n| 1  | [suarasaur](https://github.com/suarasaur) |  \n\n### Author\n\n**Jon Schlinkert**\n\n* [GitHub Profile](https://github.com/jonschlinkert)\n* [Twitter Profile](https://twitter.com/jonschlinkert)\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\n\n### License\n\nCopyright © 2018, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on November 20, 2018._",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015-present, Jon Schlinkert.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/parse-git-config/-/parse-git-config-3.0.0.tgz#4a2de08c7b74a2555efa5ae94d40cd44302a6132",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/parse-git-config/-/parse-git-config-3.0.0.tgz",
    "hash": "4a2de08c7b74a2555efa5ae94d40cd44302a6132",
    "integrity": "sha512-wXoQGL1D+2COYWCD35/xbiKma1Z15xvZL8cI25wvxzled58V51SJM04Urt/uznS900iQor7QO04SgdfT/XlbuA==",
    "registry": "npm",
    "packageName": "parse-git-config",
    "cacheIntegrity": "sha512-wXoQGL1D+2COYWCD35/xbiKma1Z15xvZL8cI25wvxzled58V51SJM04Urt/uznS900iQor7QO04SgdfT/XlbuA== sha1-Si3gjHt0olVe+lrpTUDNRDAqYTI="
  },
  "registry": "npm",
  "hash": "4a2de08c7b74a2555efa5ae94d40cd44302a6132"
}