{
  "manifest": {
    "name": "rc9",
    "version": "2.1.1",
    "description": "Read/Write config couldn't be easier!",
    "repository": {
      "type": "git",
      "url": "https://github.com/unjs/rc9.git"
    },
    "license": "MIT",
    "sideEffects": false,
    "exports": {
      ".": {
        "require": "./dist/index.cjs",
        "import": "./dist/index.mjs",
        "types": "./dist/index.d.ts"
      }
    },
    "main": "./dist/index.cjs",
    "types": "./dist/index.d.ts",
    "files": [
      "dist"
    ],
    "scripts": {
      "build": "unbuild",
      "dev": "vitest",
      "lint": "eslint --ext .ts . && prettier -c src test",
      "release": "pnpm test && pnpm build && changelogen --release --push && npm publish",
      "test": "pnpm lint && vitest run --coverage"
    },
    "dependencies": {
      "defu": "^6.1.2",
      "destr": "^2.0.0",
      "flat": "^5.0.2"
    },
    "devDependencies": {
      "@types/flat": "^5.0.2",
      "@types/node": "^20.3.1",
      "@vitest/coverage-v8": "^0.32.2",
      "changelogen": "^0.5.3",
      "eslint": "^8.43.0",
      "eslint-config-unjs": "^0.2.1",
      "prettier": "^2.8.8",
      "typescript": "^5.1.3",
      "unbuild": "^1.2.1",
      "vitest": "^0.32.2"
    },
    "packageManager": "pnpm@8.5.1",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-rc9-2.1.1-6614c32db7731b44cd48641ce68f373c3ee212a9-integrity/node_modules/rc9/package.json",
    "readmeFilename": "README.md",
    "readme": "# RC9\n\n> Read/Write config couldn't be easier!\n\n[![npm version][npm-version-src]][npm-version-href]\n[![npm downloads][npm-downloads-src]][npm-downloads-href]\n[![Github Actions][github-actions-src]][github-actions-href]\n[![Codecov][codecov-src]][codecov-href]\n\n## Install\n\nInstall using npm or yarn:\n\n```bash\nnpm i rc9\n# or\nyarn add rc9\n```\n\nImport into your Node.js project:\n\n```js\n// CommonJS\nconst { read, write, update } = require('rc9')\n\n// ESM\nimport { read, write, update } from 'rc9'\n```\n\n## Usage\n\n`.conf`:\n\n```ts\ndb.username=db username\ndb.password=db pass\ndb.enabled=true\n```\n\n**Update config:**\n\n```ts\nupdate({ 'db.enabled': true }) // or update(..., { name: '.conf' })\n```\n\nPush to an array:\n\n```ts\nupdate({ 'modules[]': 'test' })\n```\n\n**Read/Write config:**\n\n```ts\nconst config = read() // or read('.conf')\n\n// config = {\n//   db: {\n//     username: 'db username',\n//     password: 'db pass',\n//     enabled: true\n//   }\n// }\n\nconfig.enabled = false\nwrite(config) // or write(config, '.conf')\n```\n\n**User Config:**\n\nIt is common to keep config in user home directory (MacOS: `/Users/{name}`, Linux: `/home/{name}`, Windows: `C:\\users\\{name}`)\n\nyou can use `readUser`/`writeuser`/`updateUser` shortcuts to quickly do this:\n\n```js\nwriteUser({ token: 123 }, '.zoorc') // Will be saved in {home}/.zoorc\n\nconst conf = readUser('.zoorc') // { token: 123 }\n```\n\n## Unflatten\n\nRC uses [flat](https://www.npmjs.com/package/flat) to automatically flat/unflat when writing and reading rcfile.\n\nIt means that you can use `.` for keys to define objects. Some examples:\n\n- `hello.world = true` <=> `{ hello: { world: true }`\n- `test.0 = A` <=> `tags: [ 'A' ]`\n\n**Note:** If you use keys that can override like `x=` and `x.y=`, you can disable this feature by passing `flat: true` option.\n\n**Tip:** You can use keys ending with `[]` to push to an array like `test[]=A`\n\n## Native Values\n\nRC uses [destr](https://www.npmjs.com/package/destr) to convert values into native javascript values.\n\nSo reading `count=123` results `{ count: 123 }` (instead of `{ count: \"123\" }`) if you want to preserve strings as is, can use `count=\"123\"`.\n\n## Exports\n\n```ts\nconst defaults: RCOptions;\nfunction parse(contents: string, options?: RCOptions): RC\nfunction parseFile(path: string, options?: RCOptions): RC\nfunction read(options?: RCOptions | string): RC;\nfunction readUser(options?: RCOptions | string): RC;\nfunction serialize(config: RC): string;\nfunction write(config: RC, options?: RCOptions | string): void;\nfunction writeUser(config: RC, options?: RCOptions | string): void;\nfunction update(config: RC, options?: RCOptions | string): RC;\nfunction updateUser(config: RC, options?: RCOptions | string): RC;\n```\n\n**Types:**\n\n```ts\ntype RC = Record<string, any>;\ninterface RCOptions {\n    name?: string;\n    dir?: string;\n    flat?: boolean;\n}\n```\n\n**Defaults:**\n\n```ts\n{\n  name: '.conf',\n  dir: process.cwd(),\n  flat: false\n}\n```\n\n### Why RC9?\n\nBe the first one to guess üêá <!-- Hint: do research about rc files history -->\n\n## License\n\nMIT. Made with üíñ\n\n<!-- Badges -->\n[npm-version-src]: https://img.shields.io/npm/v/rc9?style=flat-square\n[npm-version-href]: https://npmjs.com/package/rc9\n\n[npm-downloads-src]: https://img.shields.io/npm/dm/rc9?style=flat-square\n[npm-downloads-href]: https://npmjs.com/package/rc9\n\n[github-actions-src]: https://img.shields.io/github/actions/workflow/status/unjs/rc9/ci.yml?branch=main&style=flat-square\n[github-actions-href]: https://github.com/unjs/rc9/actions?query=workflow%3Aci\n\n[codecov-src]: https://img.shields.io/codecov/c/gh/unjs/rc9/main?style=flat-square\n[codecov-href]: https://codecov.io/gh/unjs/rc9\n",
    "licenseText": "MIT License\n\nCopyright (c) Pooya Parsa <pooya@pi0.io>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rc9/-/rc9-2.1.1.tgz#6614c32db7731b44cd48641ce68f373c3ee212a9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rc9/-/rc9-2.1.1.tgz",
    "hash": "6614c32db7731b44cd48641ce68f373c3ee212a9",
    "integrity": "sha512-lNeOl38Ws0eNxpO3+wD1I9rkHGQyj1NU1jlzv4go2CtEnEQEUfqnIvZG7W+bC/aXdJ27n5x/yUjb6RoT9tko+Q==",
    "registry": "npm",
    "packageName": "rc9",
    "cacheIntegrity": "sha512-lNeOl38Ws0eNxpO3+wD1I9rkHGQyj1NU1jlzv4go2CtEnEQEUfqnIvZG7W+bC/aXdJ27n5x/yUjb6RoT9tko+Q== sha1-ZhTDLbdzG0TNSGQc5o83PD7iEqk="
  },
  "registry": "npm",
  "hash": "6614c32db7731b44cd48641ce68f373c3ee212a9"
}