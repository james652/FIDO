{
  "manifest": {
    "name": "https-proxy-agent",
    "version": "7.0.2",
    "description": "An HTTP(s) proxy `http.Agent` implementation for HTTPS",
    "main": "./dist/index.js",
    "types": "./dist/index.d.ts",
    "files": [
      "dist"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/TooTallNate/proxy-agents.git",
      "directory": "packages/https-proxy-agent"
    },
    "keywords": [
      "https",
      "proxy",
      "endpoint",
      "agent"
    ],
    "author": {
      "name": "Nathan Rajlich",
      "email": "nathan@tootallnate.net",
      "url": "http://n8.io/"
    },
    "license": "MIT",
    "dependencies": {
      "agent-base": "^7.0.2",
      "debug": "4"
    },
    "devDependencies": {
      "@types/async-retry": "^1.4.5",
      "@types/debug": "4",
      "@types/jest": "^29.5.1",
      "@types/node": "^14.18.45",
      "async-listen": "^3.0.0",
      "async-retry": "^1.3.3",
      "jest": "^29.5.0",
      "ts-jest": "^29.1.0",
      "typescript": "^5.0.4",
      "proxy": "2.1.1",
      "tsconfig": "0.0.0"
    },
    "engines": {
      "node": ">= 14"
    },
    "scripts": {
      "build": "tsc",
      "test": "jest --env node --verbose --bail test/test.ts",
      "test-e2e": "jest --env node --verbose --bail test/e2e.test.ts",
      "lint": "eslint --ext .ts",
      "pack": "node ../../scripts/pack.mjs"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-https-proxy-agent-7.0.2-e2645b846b90e96c6e6f347fb5b2e41f1590b09b-integrity/node_modules/https-proxy-agent/package.json",
    "readmeFilename": "README.md",
    "readme": "https-proxy-agent\n================\n### An HTTP(s) proxy `http.Agent` implementation for HTTPS\n\nThis module provides an `http.Agent` implementation that connects to a specified\nHTTP or HTTPS proxy server, and can be used with the built-in `https` module.\n\nSpecifically, this `Agent` implementation connects to an intermediary \"proxy\"\nserver and issues the [CONNECT HTTP method][CONNECT], which tells the proxy to\nopen a direct TCP connection to the destination server.\n\nSince this agent implements the CONNECT HTTP method, it also works with other\nprotocols that use this method when connecting over proxies (i.e. WebSockets).\nSee the \"Examples\" section below for more.\n\nExamples\n--------\n\n#### `https` module example\n\n```ts\nimport * as https from 'https';\nimport { HttpsProxyAgent } from 'https-proxy-agent';\n\nconst agent = new HttpsProxyAgent('http://168.63.76.32:3128');\n\nhttps.get('https://example.com', { agent }, (res) => {\n  console.log('\"response\" event!', res.headers);\n  res.pipe(process.stdout);\n});\n```\n\n#### `ws` WebSocket connection example\n\n```ts\nimport WebSocket from 'ws';\nimport { HttpsProxyAgent } from 'https-proxy-agent';\n\nconst agent = new HttpsProxyAgent('http://168.63.76.32:3128');\nconst socket = new WebSocket('ws://echo.websocket.org', { agent });\n\nsocket.on('open', function () {\n  console.log('\"open\" event!');\n  socket.send('hello world');\n});\n\nsocket.on('message', function (data, flags) {\n  console.log('\"message\" event! %j %j', data, flags);\n  socket.close();\n});\n```\n\nAPI\n---\n\n### new HttpsProxyAgent(proxy: string | URL, options?: HttpsProxyAgentOptions)\n\nThe `HttpsProxyAgent` class implements an `http.Agent` subclass that connects\nto the specified \"HTTP(s) proxy server\" in order to proxy HTTPS and/or WebSocket\nrequests. This is achieved by using the [HTTP `CONNECT` method][CONNECT].\n\nThe `proxy` argument is the URL for the proxy server.\n\nThe `options` argument accepts the usual `http.Agent` constructor options, and\nsome additional properties:\n\n * `headers` - Object containing additional headers to send to the proxy server\n   in the `CONNECT` request.\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2013 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[CONNECT]: http://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_Tunneling\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/https-proxy-agent/-/https-proxy-agent-7.0.2.tgz#e2645b846b90e96c6e6f347fb5b2e41f1590b09b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/https-proxy-agent/-/https-proxy-agent-7.0.2.tgz",
    "hash": "e2645b846b90e96c6e6f347fb5b2e41f1590b09b",
    "integrity": "sha512-NmLNjm6ucYwtcUmL7JQC1ZQ57LmHP4lT15FQ8D61nak1rO6DH+fz5qNK2Ap5UN4ZapYICE3/0KodcLYSPsPbaA==",
    "registry": "npm",
    "packageName": "https-proxy-agent",
    "cacheIntegrity": "sha512-NmLNjm6ucYwtcUmL7JQC1ZQ57LmHP4lT15FQ8D61nak1rO6DH+fz5qNK2Ap5UN4ZapYICE3/0KodcLYSPsPbaA== sha1-4mRbhGuQ6WxubzR/tbLkHxWQsJs="
  },
  "registry": "npm",
  "hash": "e2645b846b90e96c6e6f347fb5b2e41f1590b09b"
}