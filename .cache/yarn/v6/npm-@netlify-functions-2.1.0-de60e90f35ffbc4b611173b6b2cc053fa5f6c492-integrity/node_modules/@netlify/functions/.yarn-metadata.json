{
  "manifest": {
    "name": "@netlify/functions",
    "main": "./dist/main.js",
    "types": "./dist/main.d.ts",
    "version": "2.1.0",
    "description": "JavaScript utilities for Netlify Functions",
    "files": [
      "dist/**/*.js",
      "dist/**/*.d.ts"
    ],
    "scripts": {
      "build": "tsc",
      "prepare": "husky install node_modules/@netlify/eslint-config-node/.husky/",
      "prepack": "npm run build",
      "prepublishOnly": "npm ci && npm test",
      "test": "run-s format test:dev",
      "format": "run-s build format:check-fix:*",
      "format:ci": "run-s build format:check:*",
      "format:check-fix:lint": "run-e format:check:lint format:fix:lint",
      "format:check:lint": "cross-env-shell eslint $npm_package_config_eslint",
      "format:fix:lint": "cross-env-shell eslint --fix $npm_package_config_eslint",
      "format:check-fix:prettier": "run-e format:check:prettier format:fix:prettier",
      "format:check:prettier": "cross-env-shell prettier --check $npm_package_config_prettier",
      "format:fix:prettier": "cross-env-shell prettier --write $npm_package_config_prettier",
      "test:dev": "run-s build test:dev:*",
      "test:ci": "run-s build test:ci:*",
      "test:dev:ava": "ava",
      "test:dev:tsd": "tsd",
      "test:ci:ava": "nyc -r lcovonly -r text -r json ava"
    },
    "config": {
      "eslint": "--ignore-pattern README.md --ignore-path .gitignore --cache --format=codeframe --max-warnings=0 \"{src,scripts,.github,test}/**/*.{ts,js,md,html}\" \"*.{ts,js,md,html}\" \".*.{ts,js,md,html}\"",
      "prettier": "--ignore-path .gitignore --loglevel=warn \"{src,scripts,.github}/**/*.{ts,js,md,yml,json,html}\" \"*.{ts,js,yml,json,html}\" \".*.{ts,js,yml,json,html}\" \"!**/package-lock.json\" \"!package-lock.json\""
    },
    "ava": {
      "files": [
        "test/unit/*.js"
      ],
      "verbose": true
    },
    "tsd": {
      "directory": "test/types/"
    },
    "keywords": [],
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/netlify/functions"
    },
    "bugs": {
      "url": "https://github.com/netlify/functions/issues"
    },
    "author": {
      "name": "Netlify Inc."
    },
    "dependencies": {
      "@netlify/serverless-functions-api": "1.7.3",
      "is-promise": "^4.0.0"
    },
    "devDependencies": {
      "@commitlint/cli": "^17.0.0",
      "@commitlint/config-conventional": "^17.0.0",
      "@netlify/eslint-config-node": "^7.0.1",
      "ava": "^2.4.0",
      "husky": "^7.0.4",
      "npm-run-all": "^4.1.5",
      "nyc": "^15.0.0",
      "tsd": "^0.29.0",
      "typescript": "^4.4.4"
    },
    "engines": {
      "node": ">=14.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@netlify-functions-2.1.0-de60e90f35ffbc4b611173b6b2cc053fa5f6c492-integrity/node_modules/@netlify/functions/package.json",
    "readmeFilename": "README.md",
    "readme": "# ![functions](functions.png)\n\n[![Build](https://github.com/netlify/functions/workflows/Build/badge.svg)](https://github.com/netlify/functions/actions)\n[![Node](https://img.shields.io/node/v/@netlify/functions.svg?logo=node.js)](https://www.npmjs.com/package/@netlify/functions)\n\nJavaScript and TypeScript utilities for [Netlify Functions](https://docs.netlify.com/functions/overview/).\n\n## Installation\n\n```\nnpm install @netlify/functions\n```\n\n## Usage\n\n### On-demand Builders\n\nTo use On-demand Builders, wrap your function handler with the `builder` function.\n\n- With JavaScript:\n\n  ```js\n  const { builder } = require('@netlify/functions')\n\n  const handler = async (event, context) => {\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: 'Hello World' }),\n    }\n  }\n\n  exports.handler = builder(handler)\n  ```\n\n- With TypeScript:\n\n  ```ts\n  import { builder, Handler } from '@netlify/functions'\n\n  const myHandler: Handler = async (event, context) => {\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: 'Hello World' }),\n    }\n  }\n\n  const handler = builder(myHandler)\n\n  export { handler }\n  ```\n\n### Scheduled Functions (currently in beta)\n\nTo use Scheduled Functions, wrap your function handler with the `schedule` function.\n\n- With JavaScript:\n\n  ```js\n  const { schedule } = require('@netlify/functions')\n\n  exports.handler = schedule('5 4 * * *', async () => {\n    console.log(\"It's 04:05 AM!\")\n  })\n  ```\n\n- With TypeScript:\n\n  ```ts\n  import { schedule } from '@netlify/functions'\n\n  export const handler = schedule(\"5 4 * * *\", async () => {\n    console.log(\"It's 04:05 AM!\")\n  })\n  ```\n\n### TypeScript typings\n\nThis module exports typings for authoring Netlify Functions in TypeScript.\n\n```ts\nimport { Handler } from '@netlify/functions'\n\nconst handler: Handler = async (event, context) => {\n  return {\n    statusCode: 200,\n    body: JSON.stringify({ message: 'Hello World' }),\n  }\n}\n\nexport { handler }\n```\n\nThe following types are exported:\n\n- `Handler`\n- `HandlerCallback`\n- `HandlerContext`\n- `HandlerEvent`\n- `HandlerResponse`\n\n## Contributors\n\nPlease see [CONTRIBUTING.md](./CONTRIBUTING.md) for instructions on how to set up and work on this repository. Thanks\nfor contributing!\n",
    "licenseText": "Copyright (c) 2020 Netlify <team@netlify.com>\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@netlify/functions/-/functions-2.1.0.tgz#de60e90f35ffbc4b611173b6b2cc053fa5f6c492",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@netlify/functions/-/functions-2.1.0.tgz",
    "hash": "de60e90f35ffbc4b611173b6b2cc053fa5f6c492",
    "integrity": "sha512-QWuyj1Q6z6Cqcq3qCcOB75nxjYOxlNmv/d9/nnX4asSRQcWhM/ehXl/KDL6Sl9aufMRe6uQY10s6i9zCDNMRjg==",
    "registry": "npm",
    "packageName": "@netlify/functions",
    "cacheIntegrity": "sha512-QWuyj1Q6z6Cqcq3qCcOB75nxjYOxlNmv/d9/nnX4asSRQcWhM/ehXl/KDL6Sl9aufMRe6uQY10s6i9zCDNMRjg== sha1-3mDpDzX/vEthEXO2sswFP6X2xJI="
  },
  "registry": "npm",
  "hash": "de60e90f35ffbc4b611173b6b2cc053fa5f6c492"
}