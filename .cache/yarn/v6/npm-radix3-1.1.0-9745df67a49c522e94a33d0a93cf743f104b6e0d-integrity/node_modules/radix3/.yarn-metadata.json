{
  "manifest": {
    "name": "radix3",
    "version": "1.1.0",
    "description": "Lightweight and fast router for JavaScript based on Radix Tree",
    "repository": {
      "type": "git",
      "url": "https://github.com/unjs/radix3.git"
    },
    "license": "MIT",
    "sideEffects": false,
    "type": "module",
    "exports": {
      ".": {
        "types": "./dist/index.d.ts",
        "require": "./dist/index.cjs",
        "import": "./dist/index.mjs"
      }
    },
    "main": "./dist/index.cjs",
    "module": "./dist/index.mjs",
    "types": "./dist/index.d.ts",
    "files": [
      "dist"
    ],
    "devDependencies": {
      "0x": "^5.5.0",
      "@vitest/coverage-c8": "^0.30.1",
      "autocannon": "^7.10.0",
      "benchmark": "^2.1.4",
      "changelogen": "^0.5.3",
      "eslint": "^8.39.0",
      "eslint-config-unjs": "^0.1.0",
      "jiti": "^1.18.2",
      "listhen": "^1.0.4",
      "ohmyfetch": "^0.4.21",
      "prettier": "^2.8.8",
      "standard-version": "^9.5.0",
      "typescript": "^5.0.4",
      "unbuild": "^1.2.1",
      "vitest": "^0.30.1"
    },
    "packageManager": "pnpm@7.32.2",
    "scripts": {
      "bench": "node ./benchmark/direct.mjs",
      "bench:http": "node ./benchmark/http.mjs",
      "bench:profile": "0x -o -D benchmark/.profile -- node ./benchmark/direct.mjs",
      "build": "unbuild",
      "dev": "vitest",
      "lint": "eslint --ext .ts,.mjs . && prettier -c src tests",
      "lint:fix": "eslint --fix --ext .ts,.mjs . && prettier -w src tests",
      "playground": "pnpm jiti ./playground.ts",
      "release": "pnpm test && pnpm build && changelogen --release && git push --follow-tags && pnpm publish",
      "test": "pnpm lint && vitest run"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-radix3-1.1.0-9745df67a49c522e94a33d0a93cf743f104b6e0d-integrity/node_modules/radix3/package.json",
    "readmeFilename": "README.md",
    "readme": "# üå≥ radix3\n\n[![npm version][npm-version-src]][npm-version-href]\n[![npm downloads][npm-downloads-src]][npm-downloads-href]\n[![bundle][bundle-src]][bundle-href]\n[![Codecov][codecov-src]][codecov-href]\n[![License][license-src]][license-href]\n[![JSDocs][jsdocs-src]][jsdocs-href]\n\nLightweight and fast router for JavaScript based on [Radix Tree](https://en.wikipedia.org/wiki/Radix_tree).\n\n## Usage\n\n**Install package:**\n\n```sh\n# npm\nnpm i radix3\n\n# yarn\nyarn add radix3\n\n# pnpm\npnpm i radix3\n```\n\n**Import:**\n\n```js\n// ESM\nimport { createRouter } from 'radix3'\n\n// CJS\nconst { createRouter } = require('radix3')\n```\n\n**Create a router instance and insert routes:**\n\n```js\nconst router = createRouter(/* options */)\n\nrouter.insert('/path', { payload: 'this path' })\nrouter.insert('/path/:name', { payload: 'named route' })\nrouter.insert('/path/foo/**', { payload: 'wildcard route' })\nrouter.insert('/path/foo/**:name', { payload: 'named wildcard route' })\n```\n\n**Match route to access matched data:**\n\n```js\nrouter.lookup('/path')\n// { payload: 'this path' }\n\nrouter.lookup('/path/fooval')\n// { payload: 'named route', params: { name: 'fooval' } }\n\nrouter.lookup('/path/foo/bar/baz')\n// { payload: 'wildcard route' }\n\nrouter.lookup('/')\n// null (no route matched for/)\n```\n\n## Methods\n\n### `router.insert(path, data)`\n\n`path` can be static or using `:placeholder` or `**` for wildcard paths.\n\nThe `data` object will be returned on matching params. It should be an object like `{ handler }` and not containing reserved keyword `params`.\n\n### `router.lookup(path)`\n\nReturns matched data for `path` with optional `params` key if mached route using placeholders.\n\n### `router.remove(path)`\n\nRemove route matching `path`.\n\n## Options\n\nYou can initialize router instance with options:\n\n```ts\nconst router = createRouter({\n  strictTrailingSlash: true,\n  routes: {\n    '/foo': {}\n  }\n})\n```\n\n- `routes`: An object specifying initial routes to add\n- `strictTrailingSlash`: By default router ignored trailing slash for matching and adding routes. When set to `true`, matching with trailing slash is different.\n\n### Route Matcher\n\nCreates a multi matcher from router tree that can match **all routes** matching path:\n\n```ts\nimport { createRouter, toRouteMatcher } from 'radix3'\n\nconst router = createRouter({\n  routes: {\n    '/foo': { m: 'foo' }, // Matches /foo only\n    '/foo/**': { m: 'foo/**' }, // Matches /foo/<any>\n    '/foo/bar': { m: 'foo/bar' },  // Matches /foo/bar only\n    '/foo/bar/baz': { m: 'foo/bar/baz' }, // Matches /foo/bar/baz only\n    '/foo/*/baz': { m: 'foo/*/baz' } // Matches /foo/<any>/baz\n  }\n})\n\nconst matcher = toRouteMatcher(router)\n\nconst matches = matcher.matchAll('/foo/bar/baz')\n\n// [\n//   {\n//     \"m\": \"foo/**\",\n//   },\n//   {\n//     \"m\": \"foo/*/baz\",\n//   },\n//   {\n//     \"m\": \"foo/bar/baz\",\n//   },\n// ]\n```\n\n### Route Matcher Export\n\nIt is also possible to export and then rehydrate a matcher from pre-compiled rules.\n\n```ts\nimport { exportMatcher, createMatcherFromExport } from 'radix3'\n\n// Assuming you already have a matcher\n// you can export this to a JSON-type object\nconst json = exportMatcher(matcher)\n\n// and then rehydrate this later\nconst newMatcher = createMatcherFromExport(json)\n\nconst matches = newMatcher.matchAll('/foo/bar/baz')\n```\n\n## Performance\n\nSee [benchmark](./benchmark).\n\n## License\n\nBased on original work of [`charlieduong94/radix-router`](https://github.com/charlieduong94/radix-router)\nby [Charlie Duong](https://github.com/charlieduong94) (MIT)\n\n[MIT](./LICENSE) - Made with ‚ù§Ô∏è\n\n<!-- Badges -->\n[npm-version-src]: https://img.shields.io/npm/v/radix3?style=flat&colorA=18181B&colorB=F0DB4F\n[npm-version-href]: https://npmjs.com/package/radix3\n[npm-downloads-src]: https://img.shields.io/npm/dm/radix3?style=flat&colorA=18181B&colorB=F0DB4F\n[npm-downloads-href]: https://npmjs.com/package/radix3\n[codecov-src]: https://img.shields.io/codecov/c/gh/unjs/radix3/main?style=flat&colorA=18181B&colorB=F0DB4F\n[codecov-href]: https://codecov.io/gh/unjs/radix3\n[bundle-src]: https://img.shields.io/bundlephobia/minzip/radix3?style=flat&colorA=18181B&colorB=F0DB4F\n[bundle-href]: https://bundlephobia.com/result?p=radix3\n[license-src]: https://img.shields.io/github/license/unjs/radix3.svg?style=flat&colorA=18181B&colorB=F0DB4F\n[license-href]: https://github.com/unjs/radix3/blob/main/LICENSE\n[jsdocs-src]: https://img.shields.io/badge/jsDocs.io-reference-18181B?style=flat&colorA=18181B&colorB=F0DB4F\n[jsdocs-href]: https://www.jsdocs.io/package/radix3\n",
    "licenseText": "MIT License\n\nCopyright (c) Pooya Parsa <pooya@pi0.io>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/radix3/-/radix3-1.1.0.tgz#9745df67a49c522e94a33d0a93cf743f104b6e0d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/radix3/-/radix3-1.1.0.tgz",
    "hash": "9745df67a49c522e94a33d0a93cf743f104b6e0d",
    "integrity": "sha512-pNsHDxbGORSvuSScqNJ+3Km6QAVqk8CfsCBIEoDgpqLrkD2f3QM4I7d1ozJJ172OmIcoUcerZaNWqtLkRXTV3A==",
    "registry": "npm",
    "packageName": "radix3",
    "cacheIntegrity": "sha512-pNsHDxbGORSvuSScqNJ+3Km6QAVqk8CfsCBIEoDgpqLrkD2f3QM4I7d1ozJJ172OmIcoUcerZaNWqtLkRXTV3A== sha1-l0XfZ6ScUi6Uoz0Kk890PxBLbg0="
  },
  "registry": "npm",
  "hash": "9745df67a49c522e94a33d0a93cf743f104b6e0d"
}