{
  "manifest": {
    "name": "unimport",
    "version": "3.4.0",
    "description": "Unified utils for auto importing APIs in modules",
    "repository": {
      "type": "git",
      "url": "https://github.com/unjs/unimport.git"
    },
    "license": "MIT",
    "sideEffects": false,
    "type": "module",
    "exports": {
      ".": {
        "types": "./dist/index.d.ts",
        "import": "./dist/index.mjs",
        "require": "./dist/index.cjs"
      },
      "./unplugin": {
        "types": "./dist/unplugin.d.ts",
        "import": "./dist/unplugin.mjs",
        "require": "./dist/unplugin.cjs"
      },
      "./addons": {
        "types": "./dist/addons.d.ts",
        "import": "./dist/addons.mjs",
        "require": "./dist/addons.cjs"
      },
      "./*": "./*"
    },
    "main": "./dist/index.cjs",
    "module": "./dist/index.mjs",
    "types": "./dist/index.d.ts",
    "files": [
      "dist",
      "*.d.ts"
    ],
    "scripts": {
      "build": "unbuild",
      "dev": "vitest dev",
      "lint": "eslint --ext .ts,.js,.mjs,.cjs .",
      "prepack": "unbuild",
      "play": "pnpm -C playground run dev",
      "play:build": "pnpm -C playground run build",
      "typecheck": "vue-tsc --noEmit",
      "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s",
      "release": "pnpm run test --run && bumpp -x \"pnpm run changelog\" --all && npm publish",
      "test": "vitest --coverage"
    },
    "dependencies": {
      "@rollup/pluginutils": "^5.0.4",
      "escape-string-regexp": "^5.0.0",
      "fast-glob": "^3.3.1",
      "local-pkg": "^0.4.3",
      "magic-string": "^0.30.3",
      "mlly": "^1.4.2",
      "pathe": "^1.1.1",
      "pkg-types": "^1.0.3",
      "scule": "^1.0.0",
      "strip-literal": "^1.3.0",
      "unplugin": "^1.5.0"
    },
    "devDependencies": {
      "@nuxtjs/eslint-config-typescript": "^12.1.0",
      "@vitest/coverage-v8": "^0.34.5",
      "bumpp": "^9.2.0",
      "conventional-changelog-cli": "^3.0.0",
      "eslint": "8.50.0",
      "h3": "^1.8.1",
      "jquery": "^3.7.1",
      "lit": "^2.8.0",
      "typescript": "^5.2.2",
      "unbuild": "^2.0.0",
      "vitest": "^0.34.5",
      "vue-tsc": "^1.8.13"
    },
    "packageManager": "pnpm@8.7.6",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-unimport-3.4.0-e8302c2eabdfc6e23b65e02c3dfe592e427e8340-integrity/node_modules/unimport/package.json",
    "readmeFilename": "README.md",
    "readme": "# unimport\n\n[![npm version][npm-version-src]][npm-version-href]\n[![npm downloads][npm-downloads-src]][npm-downloads-href]\n[![Codecov][codecov-src]][codecov-href]\n\n> Unified utils for auto importing APIs in modules, used in [nuxt](https://github.com/nuxt/nuxt) and [unplugin-auto-import](https://github.com/antfu/unplugin-auto-import)\n\n## Features\n\n- Auto import register APIs for Vite, Webpack or esbuild powered by [unplugin](https://github.com/unjs/unplugin)\n- TypeScript declaration file generation\n- Auto import for custom APIs defined under specific directories\n- Auto import for Vue template\n\n## Install\n\n```sh\n# npm\nnpm install unimport\n\n# yarn\nyarn add unimport\n\n# pnpm\npnpm install unimport\n```\n\n## Usage\n\n### Plugin Usage\n\nPowered by [unplugin](https://github.com/unjs/unplugin), `unimport` provides a plugin interface for bundlers.\n\n#### Vite / Rollup\n\n```ts\n// vite.config.js / rollup.config.js\nimport Unimport from 'unimport/unplugin'\n\nexport default {\n  plugins: [\n    Unimport.vite({ /* plugin options */ })\n  ]\n}\n```\n\n#### Webpack\n\n```ts\n// webpack.config.js\nimport Unimport from 'unimport/unplugin'\n\nmodule.exports = {\n  plugins: [\n    Unimport.webpack({ /* plugin options */ })\n  ]\n}\n```\n\n### Programmatic Usage\n\n```js\n// ESM\nimport { createUnimport } from 'unimport'\n\n// CommonJS\nconst { createUnimport } = require('unimport')\n```\n\n```js\nconst { injectImports } = createUnimport({\n  imports: [{ name: 'fooBar', from: 'test-id' }]\n})\n\n// { code: \"import { fooBar } from 'test-id';console.log(fooBar())\" }\nconsole.log(injectImports('console.log(fooBar())'))\n```\n\n## Configurations\n\n### Imports Item\n\n###### Named import\n\n```ts\nimports: [\n  { name: 'ref', from: 'vue' },\n  { name: 'useState', as: 'useSignal', from: 'react' },\n]\n```\n\nWill be injected as:\n\n```ts\nimport { ref } from 'vue'\nimport { useState as useSignal } from 'react'\n```\n\n###### Default import\n\n```ts\nimports: [\n  { name: 'default', as: '_', from: 'lodash' }\n]\n```\n\nWill be injected as:\n\n```ts\nimport _ from 'lodash'\n```\n\n###### Custom Presets\n\nPresets are provided as a shorthand for declaring imports from the same package:\n\n```ts\npresets: [\n  {\n    from: 'vue',\n    imports: [\n      'ref',\n      'reactive',\n      // ...\n    ]\n  }\n]\n```\n\nWill be equivalent as:\n\n```ts\nimports: [\n  { name: 'ref', from: 'vue' },\n  { name: 'reactive', from: 'vue' },\n  // ...\n]\n```\n\n###### Built-in Presets\n\n`unimport` also provides some builtin presets for common libraries:\n\n```ts\npresets: [\n  'vue',\n  'pinia',\n  'vue-i18n',\n  // ...\n]\n```\n\nYou can check out [`src/presets`](./src/presets/) for all the options available or refer to the type declaration.\n\n###### Exports Auto Scan\n\nSince `unimport` v0.7.0, we also support auto scanning the examples from a local installed package, for example:\n\n```ts\npresets: [\n  {\n    package: 'h3',\n    ignore: ['isStream', /^[A-Z]/, /^[a-z]*$/, r => r.length > 8]\n  }\n]\n```\n\nThis will be expanded into:\n\n```ts\nimports: [\n  {\n    \"from\": \"h3\",\n    \"name\": \"appendHeader\",\n  },\n  {\n    \"from\": \"h3\",\n    \"name\": \"appendHeaders\",\n  },\n  {\n    \"from\": \"h3\",\n    \"name\": \"appendResponseHeader\",\n  },\n  // ...\n]\n```\n\nThe `ignore` option is used to filter out the exports, it can be a string, regex or a function that returns a boolean.\n\nBy default, the result is strongly cached by the version of the package. You can disable this by setting `cache: false`.\n\n### Type Declarations\n\n```ts\nUnimport.vite({\n  dts: true // or a path to generated file\n})\n```\n\n### Directory Auto Import\n\n```ts\n{\n  dirs: [\n    './composables/*'\n  ]\n}\n```\n\nNamed exports for modules under `./composables/*` will be registered for auto imports.\n\n### Opt-out Auto Import\n\nYou can opt-out auto-import for specific modules by adding a comment:\n\n```ts\n// @unimport-disable\n```\n\nIt can be customized by setting `commentsDisable`:\n\n```ts\nUnimport.vite({\n  commentsDisable: [\n    '@unimport-disable',\n    '@custom-imports-disable',\n  ]\n})\n```\n\n### Vue Template Auto Import\n\nIn Vue's template, the usage of API is in a different context than plain modules. Thus some custom transformations are required. To enable it, set `addons.vueTemplate` to `true`:\n\n```ts\nUnimport.vite({\n  addons: {\n    vueTemplate: true\n  }\n})\n```\n\n#### Caveats\n\nWhen auto-import a ref, inline operations won't be auto-unwrapped.\n\n```ts\nexport const counter = ref(0)\n```\n\n```html\n<template>\n  <!-- this is ok -->\n  <div>{{ counter }}</div>\n\n  <!-- counter here is a ref, this won't work, volar will throw -->\n  <div>{{ counter + 1 }}</div>\n\n  <!-- use this instead -->\n  <div>{{ counter.value + 1 }}</div>\n</template>\n```\n\nWe recommend using [Volar](https://github.com/johnsoncodehk/volar) for type checking, which will help you to identify the misusage.\n\n## ðŸ’» Development\n\n- Clone this repository\n- Enable [Corepack](https://github.com/nodejs/corepack) using `corepack enable` (use `npm i -g corepack` for Node.js < 16.10)\n- Install dependencies using `pnpm install`\n- Run interactive tests using `pnpm dev`\n\n## License\n\nMade with ðŸ’›\n\nPublished under [MIT License](./LICENSE).\n\n<!-- Badges -->\n[npm-version-src]: https://img.shields.io/npm/v/unimport?style=flat-square\n[npm-version-href]: https://npmjs.com/package/unimport\n\n[npm-downloads-src]: https://img.shields.io/npm/dm/unimport?style=flat-square\n[npm-downloads-href]: https://npmjs.com/package/unimport\n\n[github-actions-src]: https://img.shields.io/github/workflow/status/unjs/unimport/ci/main?style=flat-square\n[github-actions-href]: https://github.com/unjs/unimport/actions?query=workflow%3Aci\n\n[codecov-src]: https://img.shields.io/codecov/c/gh/unjs/unimport/main?style=flat-square\n[codecov-href]: https://codecov.io/gh/unjs/unimport\n",
    "licenseText": "MIT License\n\nCopyright (c) 2022 - UnJS\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/unimport/-/unimport-3.4.0.tgz#e8302c2eabdfc6e23b65e02c3dfe592e427e8340",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/unimport/-/unimport-3.4.0.tgz",
    "hash": "e8302c2eabdfc6e23b65e02c3dfe592e427e8340",
    "integrity": "sha512-M/lfFEgufIT156QAr/jWHLUn55kEmxBBiQsMxvRSIbquwmeJEyQYgshHDEvQDWlSJrVOOTAgnJ3FvlsrpGkanA==",
    "registry": "npm",
    "packageName": "unimport",
    "cacheIntegrity": "sha512-M/lfFEgufIT156QAr/jWHLUn55kEmxBBiQsMxvRSIbquwmeJEyQYgshHDEvQDWlSJrVOOTAgnJ3FvlsrpGkanA== sha1-6DAsLqvfxuI7ZeAsPf5ZLkJ+g0A="
  },
  "registry": "npm",
  "hash": "e8302c2eabdfc6e23b65e02c3dfe592e427e8340"
}