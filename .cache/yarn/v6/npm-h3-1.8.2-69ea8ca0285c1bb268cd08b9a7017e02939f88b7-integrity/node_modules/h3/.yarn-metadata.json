{
  "manifest": {
    "name": "h3",
    "version": "1.8.2",
    "description": "Minimal H(TTP) framework built for high performance and portability.",
    "repository": {
      "type": "git",
      "url": "https://github.com/unjs/h3.git"
    },
    "license": "MIT",
    "sideEffects": false,
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "types": "./dist/index.d.ts",
        "import": "./dist/index.mjs",
        "require": "./dist/index.cjs"
      }
    },
    "main": "./dist/index.cjs",
    "module": "./dist/index.mjs",
    "types": "./dist/index.d.ts",
    "files": [
      "dist"
    ],
    "dependencies": {
      "cookie-es": "^1.0.0",
      "defu": "^6.1.2",
      "destr": "^2.0.1",
      "iron-webcrypto": "^0.10.1",
      "radix3": "^1.1.0",
      "ufo": "^1.3.0",
      "uncrypto": "^0.1.3",
      "unenv": "^1.7.4"
    },
    "devDependencies": {
      "0x": "^5.7.0",
      "@types/express": "^4.17.18",
      "@types/node": "^20.7.0",
      "@types/supertest": "^2.0.13",
      "@vitest/coverage-v8": "^0.34.5",
      "autocannon": "^7.12.0",
      "changelogen": "^0.5.5",
      "connect": "^3.7.0",
      "eslint": "^8.50.0",
      "eslint-config-unjs": "^0.2.1",
      "express": "^4.18.2",
      "get-port": "^7.0.0",
      "jiti": "^1.20.0",
      "listhen": "^1.5.5",
      "node-fetch-native": "^1.4.0",
      "prettier": "^3.0.3",
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "supertest": "^6.3.3",
      "typescript": "^5.2.2",
      "unbuild": "^2.0.0",
      "vitest": "^0.34.5",
      "zod": "^3.22.2"
    },
    "packageManager": "pnpm@8.8.0",
    "scripts": {
      "build": "unbuild",
      "dev": "vitest",
      "lint": "eslint --cache --ext .ts,.js,.mjs,.cjs . && prettier -c src test playground",
      "lint:fix": "eslint --cache --ext .ts,.js,.mjs,.cjs . --fix && prettier -c src test playground -w",
      "play": "listhen -w ./playground/app.ts",
      "profile": "0x -o -D .profile -P 'autocannon -c 100 -p 10 -d 40 http://localhost:$PORT' ./playground/server.cjs",
      "release": "pnpm test && pnpm build && changelogen --release && pnpm publish && git push --follow-tags",
      "release-rc": "pnpm test && pnpm build && changelogen --release --prerelease rc --push --publish --publishTag rc",
      "test": "pnpm lint && vitest --run typecheck && vitest --run --coverage",
      "test:types": "vitest typecheck"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-h3-1.8.2-69ea8ca0285c1bb268cd08b9a7017e02939f88b7-integrity/node_modules/h3/package.json",
    "readmeFilename": "README.md",
    "readme": "# H3\n\n[![npm version][npm-version-src]][npm-version-href]\n[![npm downloads][npm-downloads-src]][npm-downloads-href]\n[![bundle][bundle-src]][bundle-href]\n[![Codecov][codecov-src]][codecov-href]\n[![License][license-src]][license-href]\n[![JSDocs][jsdocs-src]][jsdocs-href]\n\nH3 is a minimal h(ttp) framework built for high performance and portability.\n\nüëâ [Online Playground](https://stackblitz.com/github/unjs/h3/tree/main/playground?startScript=dev)\n\n## Features\n\n‚úîÔ∏è &nbsp;**Portable:** Works perfectly in Serverless, Workers, and Node.js\n\n‚úîÔ∏è &nbsp;**Minimal:** Small and tree-shakable\n\n‚úîÔ∏è &nbsp;**Modern:** Native promise support\n\n‚úîÔ∏è &nbsp;**Extendable:** Ships with a set of composable utilities but can be extended\n\n‚úîÔ∏è &nbsp;**Router:** Super fast route matching using [unjs/radix3](https://github.com/unjs/radix3)\n\n‚úîÔ∏è &nbsp;**Compatible:** Compatibility layer with node/connect/express middleware\n\n## Install\n\n```bash\n# Using npm\nnpm install h3\n\n# Using yarn\nyarn add h3\n\n# Using pnpm\npnpm add h3\n```\n\n<details>\n  <summary>Using Nightly Releases</summary>\n\nIf you are directly using `h3` as a dependency:\n\n```json\n{\n  \"dependencies\": {\n    \"h3\": \"npm:h3-nightly@latest\"\n  }\n}\n```\n\nIf you are using a framework ([Nuxt](https://nuxt.com/) or [Nitro](https://nitro.unjs.io/)) that is using `h3`:\n\npnpm and yarn:\n\n```json\n{\n  \"resolutions\": {\n    \"h3\": \"npm:h3-nightly@latest\"\n  }\n}\n```\n\nnpm:\n\n```json\n{\n  \"overrides\": {\n    \"h3\": \"npm:h3-nightly@latest\"\n  }\n}\n```\n\n**Note:** Make sure to recreate lockfile and `node_modules` after reinstall to avoid hoisting issues.\n\n</details>\n\n## Usage\n\n```ts\nimport { createServer } from \"node:http\";\nimport { createApp, eventHandler, toNodeListener } from \"h3\";\n\nconst app = createApp();\napp.use(\n  \"/\",\n  eventHandler(() => \"Hello world!\"),\n);\n\ncreateServer(toNodeListener(app)).listen(process.env.PORT || 3000);\n```\n\nExample using <a href=\"https://github.com/unjs/listhen\">listhen</a> for an elegant listener:\n\n```ts\nimport { createApp, eventHandler, toNodeListener } from \"h3\";\nimport { listen } from \"listhen\";\n\nconst app = createApp();\napp.use(\n  \"/\",\n  eventHandler(() => \"Hello world!\"),\n);\n\nlisten(toNodeListener(app));\n```\n\n## Router\n\nThe `app` instance created by `h3` uses a middleware stack (see [how it works](./src/app.ts)) with the ability to match route prefix and apply matched middleware.\n\nTo opt-in using a more advanced and convenient routing system, we can create a router instance and register it to app instance.\n\n```ts\nimport { createApp, eventHandler, createRouter } from \"h3\";\n\nconst app = createApp();\n\nconst router = createRouter()\n  .get(\n    \"/\",\n    eventHandler(() => \"Hello World!\"),\n  )\n  .get(\n    \"/hello/:name\",\n    eventHandler((event) => `Hello ${event.context.params.name}!`),\n  );\n\napp.use(router);\n```\n\n**Tip:** We can register the same route more than once with different methods.\n\nRoutes are internally stored in a [Radix Tree](https://en.wikipedia.org/wiki/Radix_tree) and matched using [unjs/radix3](https://github.com/unjs/radix3).\n\nFor using nested routers, see [this example](https://stackblitz.com/edit/github-2bmusk?file=app.ts&startScript=dev)\n\n## More app usage examples\n\n```js\n// Handle can directly return object or Promise<object> for JSON response\napp.use(\n  \"/api\",\n  eventHandler((event) => ({ url: event.node.req.url })),\n);\n\n// We can have better matching other than quick prefix match\napp.use(\n  \"/odd\",\n  eventHandler(() => \"Is odd!\"),\n  { match: (url) => url.substr(1) % 2 },\n);\n\n// Handle can directly return string for HTML response\napp.use(eventHandler(() => \"<h1>Hello world!</h1>\"));\n\n// We can chain calls to .use()\napp\n  .use(\n    \"/1\",\n    eventHandler(() => \"<h1>Hello world!</h1>\"),\n  )\n  .use(\n    \"/2\",\n    eventHandler(() => \"<h1>Goodbye!</h1>\"),\n  );\n\n// We can proxy requests and rewrite cookie's domain and path\napp.use(\n  \"/api\",\n  eventHandler((event) =>\n    proxyRequest(event, \"https://example.com\", {\n      // f.e. keep one domain unchanged, rewrite one domain and remove other domains\n      cookieDomainRewrite: {\n        \"example.com\": \"example.com\",\n        \"example.com\": \"somecompany.co.uk\",\n        \"*\": \"\",\n      },\n      cookiePathRewrite: {\n        \"/\": \"/api\",\n      },\n    }),\n  ),\n);\n\n// Legacy middleware with 3rd argument are automatically promisified\napp.use(\n  fromNodeMiddleware((req, res, next) => {\n    req.setHeader(\"x-foo\", \"bar\");\n    next();\n  }),\n);\n\n// Lazy loaded routes using { lazy: true }\napp.use(\"/big\", () => import(\"./big-handler\"), { lazy: true });\n```\n\n## Utilities\n\nH3 has a concept of composable utilities that accept `event` (from `eventHandler((event) => {})`) as their first argument. This has several performance benefits over injecting them to `event` or `app` instances in global middleware commonly used in Node.js frameworks, such as Express. This concept means only required code is evaluated and bundled, and the rest of the utilities can be tree-shaken when not used.\n\nüëâ You can check list of exported built-in utils from [JSDocs Documentation](https://www.jsdocs.io/package/h3#package-functions).\n\n#### Body\n\n- `readRawBody(event, encoding?)`\n- `readBody(event)`\n- `readValidatedBody(event, validate)`\n- `readMultipartFormData(event)`\n\n#### Request\n\n- `getQuery(event)`\n- `getValidatedQuery(event, validate)`\n- `getRouterParams(event)`\n- `getMethod(event, default?)`\n- `isMethod(event, expected, allowHead?)`\n- `assertMethod(event, expected, allowHead?)`\n- `getRequestHeaders(event, headers)` (alias: `getHeaders`)\n- `getRequestHeader(event, name)` (alias: `getHeader`)\n- `getRequestURL(event)`\n- `getRequestHost(event)`\n- `getRequestProtocol(event)`\n- `getRequestPath(event)`\n- `getRequestIP(event, { xForwardedFor: boolean })`\n\n#### Response\n\n- `send(event, data, type?)`\n- `sendNoContent(event, code = 204)`\n- `setResponseStatus(event, status)`\n- `getResponseStatus(event)`\n- `getResponseStatusText(event)`\n- `getResponseHeaders(event)`\n- `getResponseHeader(event, name)`\n- `setResponseHeaders(event, headers)` (alias: `setHeaders`)\n- `setResponseHeader(event, name, value)` (alias: `setHeader`)\n- `appendResponseHeaders(event, headers)` (alias: `appendHeaders`)\n- `appendResponseHeader(event, name, value)` (alias: `appendHeader`)\n- `defaultContentType(event, type)`\n- `sendRedirect(event, location, code=302)`\n- `isStream(data)`\n- `sendStream(event, data)`\n- `writeEarlyHints(event, links, callback)`\n\n#### Sanitize\n\n- `sanitizeStatusMessage(statusMessage)`\n- `sanitizeStatusCode(statusCode, default = 200)`\n\n#### Error\n\n- `sendError(event, error, debug?)`\n- `createError({ statusCode, statusMessage, data? })`\n\n#### Route\n\n- `useBase(base, handler)`\n\n#### Proxy\n\n- `sendProxy(event, { target, ...options })`\n- `proxyRequest(event, { target, ...options })`\n- `fetchWithEvent(event, req, init, { fetch? }?)`\n- `getProxyRequestHeaders(event)`\n\n#### Cookie\n\n- `parseCookies(event)`\n- `getCookie(event, name)`\n- `setCookie(event, name, value, opts?)`\n- `deleteCookie(event, name, opts?)`\n- `splitCookiesString(cookiesString)`\n\n#### Session\n\n- `useSession(event, config = { password, maxAge?, name?, cookie?, seal?, crypto? })`\n- `getSession(event, config)`\n- `updateSession(event, config, update)`\n- `sealSession(event, config)`\n- `unsealSession(event, config, sealed)`\n- `clearSession(event, config)`\n\n#### Cache\n\n- `handleCacheHeaders(event, opts)`\n\n#### Cors\n\n- `handleCors(options)` (see [h3-cors](https://github.com/NozomuIkuta/h3-cors) for more detail about options)\n- `isPreflightRequest(event)`\n- `isCorsOriginAllowed(event)`\n- `appendCorsHeaders(event, options)` (see [h3-cors](https://github.com/NozomuIkuta/h3-cors) for more detail about options)\n- `appendCorsPreflightHeaders(event, options)` (see [h3-cors](https://github.com/NozomuIkuta/h3-cors) for more detail about options)\n\n## Community Packages\n\nYou can use more H3 event utilities made by the community.\n\nPlease check their READMEs for more details.\n\nPRs are welcome to add your packages.\n\n- [h3-typebox](https://github.com/kevinmarrec/h3-typebox)\n  - `validateBody(event, schema)`\n  - `validateQuery(event, schema)`\n- [h3-zod](https://github.com/wobsoriano/h3-zod)\n  - `useValidatedBody(event, schema)`\n  - `useValidatedQuery(event, schema)`\n- [h3-valibot](https://github.com/intevel/h3-valibot)\n  - `useValidateBody(event, schema)`\n  - `useValidateParams(event, schema)`\n\n## License\n\nMIT\n\n<!-- Badges -->\n\n[npm-version-src]: https://img.shields.io/npm/v/h3?style=flat&colorA=18181B&colorB=F0DB4F\n[npm-version-href]: https://npmjs.com/package/h3\n[npm-downloads-src]: https://img.shields.io/npm/dm/h3?style=flat&colorA=18181B&colorB=F0DB4F\n[npm-downloads-href]: https://npmjs.com/package/h3\n[codecov-src]: https://img.shields.io/codecov/c/gh/unjs/h3/main?style=flat&colorA=18181B&colorB=F0DB4F\n[codecov-href]: https://codecov.io/gh/unjs/h3\n[bundle-src]: https://img.shields.io/bundlephobia/minzip/h3?style=flat&colorA=18181B&colorB=F0DB4F\n[bundle-href]: https://bundlephobia.com/result?p=h3\n[license-src]: https://img.shields.io/github/license/unjs/h3.svg?style=flat&colorA=18181B&colorB=F0DB4F\n[license-href]: https://github.com/unjs/h3/blob/main/LICENSE\n[jsdocs-src]: https://img.shields.io/badge/jsDocs.io-reference-18181B?style=flat&colorA=18181B&colorB=F0DB4F\n[jsdocs-href]: https://www.jsdocs.io/package/h3\n",
    "licenseText": "MIT License\n\nCopyright (c) Pooya Parsa <pooya@pi0.io>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/h3/-/h3-1.8.2.tgz#69ea8ca0285c1bb268cd08b9a7017e02939f88b7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/h3/-/h3-1.8.2.tgz",
    "hash": "69ea8ca0285c1bb268cd08b9a7017e02939f88b7",
    "integrity": "sha512-1Ca0orJJlCaiFY68BvzQtP2lKLk46kcLAxVM8JgYbtm2cUg6IY7pjpYgWMwUvDO9QI30N5JAukOKoT8KD3Q0PQ==",
    "registry": "npm",
    "packageName": "h3",
    "cacheIntegrity": "sha512-1Ca0orJJlCaiFY68BvzQtP2lKLk46kcLAxVM8JgYbtm2cUg6IY7pjpYgWMwUvDO9QI30N5JAukOKoT8KD3Q0PQ== sha1-aeqMoChcG7JozQi5pwF+ApOfiLc="
  },
  "registry": "npm",
  "hash": "69ea8ca0285c1bb268cd08b9a7017e02939f88b7"
}