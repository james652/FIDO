{
  "manifest": {
    "name": "uqr",
    "type": "module",
    "version": "0.1.2",
    "packageManager": "pnpm@8.6.12",
    "description": "Generate QR Code universally, in any runtime, to ANSI, Unicode or SVG.",
    "author": {
      "name": "Anthony Fu",
      "email": "anthonyfu117@hotmail.com"
    },
    "license": "MIT",
    "homepage": "https://github.com/unjs/uqr#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/unjs/uqr.git"
    },
    "bugs": {
      "url": "https://github.com/unjs/uqr/issues"
    },
    "keywords": [],
    "sideEffects": false,
    "exports": {
      ".": {
        "import": "./dist/index.mjs",
        "require": "./dist/index.cjs"
      }
    },
    "main": "./dist/index.mjs",
    "module": "./dist/index.mjs",
    "types": "./dist/index.d.ts",
    "typesVersions": {
      "*": {
        "*": [
          "./dist/*",
          "./dist/index.d.ts"
        ]
      }
    },
    "files": [
      "dist"
    ],
    "scripts": {
      "build": "unbuild",
      "dev": "unbuild --stub",
      "lint": "eslint .",
      "prepublishOnly": "nr build",
      "release": "bumpp && npm publish",
      "play": "esno play/run.ts",
      "test": "vitest",
      "typecheck": "tsc --noEmit"
    },
    "devDependencies": {
      "@antfu/eslint-config": "^0.40.2",
      "@antfu/ni": "^0.21.5",
      "@antfu/utils": "^0.7.6",
      "@types/node": "^20.5.0",
      "bumpp": "^9.1.1",
      "eslint": "^8.47.0",
      "esno": "^0.17.0",
      "lint-staged": "^14.0.0",
      "pnpm": "^8.6.12",
      "rimraf": "^5.0.1",
      "rollup": "^3.28.0",
      "simple-git-hooks": "^2.9.0",
      "typescript": "^5.1.6",
      "unbuild": "^2.0.0-rc.0",
      "vite": "^4.4.9",
      "vitest": "^0.34.1"
    },
    "simple-git-hooks": {
      "pre-commit": "pnpm lint-staged"
    },
    "lint-staged": {
      "*": "eslint --fix"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-uqr-0.1.2-5c6cd5dcff9581f9bb35b982cb89e2c483a41d7d-integrity/node_modules/uqr/package.json",
    "readmeFilename": "README.md",
    "readme": "# uqr\n\n[![npm version][npm-version-src]][npm-version-href]\n[![npm downloads][npm-downloads-src]][npm-downloads-href]\n[![bundle][bundle-src]][bundle-href]\n[![License][license-src]][license-href]\n[![JSDocs][jsdocs-src]][jsdocs-href]\n\n<!-- [![Codecov][codecov-src]][codecov-href] -->\n\nGenerate QR Code universally, in any runtime, to ANSI, Unicode or SVG. ES module , zero dependency, tree-shakable.\n\n## Install\n\n```bash\n# Using npm\nnpm install uqr\n\n# Using yarn\nyarn add uqr\n\n# Using pnpm\npnpm add uqr\n```\n\n## Usage\n\n```ts\nimport {\n  encode,\n  renderANSI,\n  renderSVG,\n  renderUnicode,\n  renderUnicodeCompact,\n} from 'uqr'\n\nconst svg = renderSVG('Hello, World!')\n\nconst ansi = renderANSI('https://192.168.1.100:3000', {\n  // Error correction level\n  ecc: 'L',\n  // Border width\n  border: 2,\n})\n\n// display QR Code in terminal\nconsole.log(ansi)\n```\n\n## API\n\n### `encode`\n\nEncode plain text or binary data into QR Code represented by a 2D array.\n\n```ts\nimport { encode } from 'uqr'\n\nconst {\n  data, // 2D array of boolean, representing the QR Code\n  version, // QR Code version\n  size, // size of the QR Code\n} = encode(text, options)\n```\n\n### `renderANSI`\n\nRender QR Code to [ANSI colored](https://ss64.com/nt/syntax-ansi.html) string.\n\n```ts\nimport { renderANSI } from 'uqr'\n\nconst string = renderANSI(text, options)\n\nconsole.log(string)\n```\n\n### `renderUnicode`\n\nRender QR Code to Unicode string for each pixel. By default it uses `█` and `░` to represent black and white pixels, and it can be customizable.\n\n```ts\nimport { renderUnicode } from 'uqr'\n\nconst string = renderUnicode(text, {\n  blackChar: '█',\n  whiteChar: '░',\n  // ...other options\n})\n```\n\n### `renderUnicodeCompact`\n\nRender QR Code with two rows into one line with unicode `▀`, `▄`, `█`, ` `. It is useful when you want to display QR Code in terminal with limited height.\n\n```ts\nimport { renderUnicodeCompact } from 'uqr'\n\nconst string = renderUnicodeCompact(text, options)\n\nconsole.log(string)\n```\n\n### `renderSVG`\n\nRender QR Code to SVG string.\n\n```ts\nimport { renderSVG } from 'uqr'\n\nconst string = renderSVG(text, options)\n```\n\n## Credits\n\nQR Code generation algorithm is modified from [nayuki/QR-Code-generator](https://github.com/nayuki/QR-Code-generator/blob/master/typescript-javascript/qrcodegen.ts) by Project Nayuki.\n\nCLI renders are inspired by [qrcode-terminal](https://github.com/gtanner/qrcode-terminal).\n\n## License\n\n[MIT](./LICENSE) License\n\n\n<!-- Badges -->\n\n[npm-version-src]: https://img.shields.io/npm/v/uqr?style=flat&colorA=18181B&colorB=F0DB4F\n[npm-version-href]: https://npmjs.com/package/uqr\n[npm-downloads-src]: https://img.shields.io/npm/dm/uqr?style=flat&colorA=18181B&colorB=F0DB4F\n[npm-downloads-href]: https://npmjs.com/package/uqr\n[codecov-src]: https://img.shields.io/codecov/c/gh/unjs/uqr/main?style=flat&colorA=18181B&colorB=F0DB4F\n[codecov-href]: https://codecov.io/gh/unjs/uqr\n[bundle-src]: https://img.shields.io/bundlephobia/minzip/uqr?style=flat&colorA=18181B&colorB=F0DB4F\n[bundle-href]: https://bundlephobia.com/result?p=uqr\n[license-src]: https://img.shields.io/github/license/unjs/uqr.svg?style=flat&colorA=18181B&colorB=F0DB4F\n[license-href]: https://github.com/unjs/uqr/blob/main/LICENSE\n[jsdocs-src]: https://img.shields.io/badge/jsDocs.io-reference-18181B?style=flat&colorA=18181B&colorB=F0DB4F\n[jsdocs-href]: https://www.jsdocs.io/package/uqr\n",
    "licenseText": "MIT License\n\nCopyright (c) Project Nayuki\nCopyright (c) 2023 Anthony Fu <https://github.com/antfu>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/uqr/-/uqr-0.1.2.tgz#5c6cd5dcff9581f9bb35b982cb89e2c483a41d7d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/uqr/-/uqr-0.1.2.tgz",
    "hash": "5c6cd5dcff9581f9bb35b982cb89e2c483a41d7d",
    "integrity": "sha512-MJu7ypHq6QasgF5YRTjqscSzQp/W11zoUk6kvmlH+fmWEs63Y0Eib13hYFwAzagRJcVY8WVnlV+eBDUGMJ5IbA==",
    "registry": "npm",
    "packageName": "uqr",
    "cacheIntegrity": "sha512-MJu7ypHq6QasgF5YRTjqscSzQp/W11zoUk6kvmlH+fmWEs63Y0Eib13hYFwAzagRJcVY8WVnlV+eBDUGMJ5IbA== sha1-XGzV3P+Vgfm7NbmCy4nixIOkHX0="
  },
  "registry": "npm",
  "hash": "5c6cd5dcff9581f9bb35b982cb89e2c483a41d7d"
}