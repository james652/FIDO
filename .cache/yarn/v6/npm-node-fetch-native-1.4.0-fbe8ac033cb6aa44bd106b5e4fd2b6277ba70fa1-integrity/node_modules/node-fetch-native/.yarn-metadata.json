{
  "manifest": {
    "name": "node-fetch-native",
    "version": "1.4.0",
    "description": "A better redistribution of `node-fetch`",
    "repository": {
      "type": "git",
      "url": "https://github.com/unjs/node-fetch-native.git"
    },
    "license": "MIT",
    "type": "module",
    "exports": {
      ".": {
        "browser": "./dist/native.mjs",
        "bun": "./dist/native.mjs",
        "deno": "./dist/native.mjs",
        "edge-light": "./dist/native.mjs",
        "edge-routine": "./dist/native.mjs",
        "lagon": "./dist/native.mjs",
        "netlify": "./dist/native.mjs",
        "react-native": "./dist/native.mjs",
        "wintercg": "./dist/native.mjs",
        "worker": "./dist/native.mjs",
        "workerd": "./dist/native.mjs",
        "node": {
          "import": {
            "types": "./lib/index.d.mts",
            "default": "./dist/index.mjs"
          },
          "require": {
            "types": "./lib/index.d.cts",
            "default": "./lib/index.cjs"
          }
        },
        "types": "./lib/index.d.mts",
        "import": "./dist/native.mjs",
        "require": "./dist/native.cjs",
        "default": "./dist/native.mjs"
      },
      "./polyfill": {
        "node": {
          "import": {
            "types": "./lib/polyfill.d.mts",
            "default": "./dist/polyfill.mjs"
          },
          "require": {
            "types": "./lib/polyfill.d.cts",
            "default": "./dist/polyfill.cjs"
          }
        },
        "types": "./lib/polyfill.d.mts",
        "import": "./lib/empty.mjs",
        "require": "./lib/empty.cjs",
        "default": "./lib/empty.mjs"
      },
      "./node": {
        "import": {
          "types": "./lib/index.d.mts",
          "default": "./dist/node.mjs"
        },
        "require": {
          "types": "./lib/index.d.cts",
          "default": "./dist/node.cjs"
        }
      },
      "./native": {
        "import": {
          "types": "./lib/index.d.mts",
          "default": "./dist/native.mjs"
        },
        "require": {
          "types": "./lib/index.d.cts",
          "default": "./lib/native.cjs"
        }
      },
      "./src/index.js": {
        "import": {
          "types": "./lib/index.d.mts",
          "default": "./dist/index.mjs"
        },
        "require": {
          "types": "./lib/index.d.cts",
          "default": "./lib/index.cjs"
        }
      }
    },
    "types": "./lib/index.d.mts",
    "main": "./lib/index.cjs",
    "module": "./dist/index.mjs",
    "files": [
      "dist",
      "lib",
      "index.d.ts",
      "node.d.ts",
      "polyfill.d.ts"
    ],
    "scripts": {
      "build": "unbuild",
      "lint": "eslint --ext .ts,.js,.mjs,.cjs . && prettier -c src test lib",
      "lint:fix": "eslint --fix --ext .ts,.js,.mjs,.cjs . && prettier -w src test lib",
      "prepack": "unbuild",
      "release": "pnpm test && changelogen --release && npm publish && git push --follow-tags",
      "test": "pnpm lint && pnpm build && vitest run --coverage"
    },
    "devDependencies": {
      "@vitest/coverage-v8": "^0.34.2",
      "abort-controller": "^3.0.0",
      "changelogen": "^0.5.5",
      "eslint": "^8.47.0",
      "eslint-config-unjs": "^0.2.1",
      "node-fetch": "^3.3.2",
      "prettier": "^3.0.2",
      "typescript": "^5.1.6",
      "unbuild": "^2.0.0",
      "vitest": "^0.34.2"
    },
    "packageManager": "pnpm@8.6.12",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-node-fetch-native-1.4.0-fbe8ac033cb6aa44bd106b5e4fd2b6277ba70fa1-integrity/node_modules/node-fetch-native/package.json",
    "readmeFilename": "README.md",
    "readme": "# node-fetch-native\n\n[![][npm-version-src]][npm-version-href]\n[![][github-actions-src]][github-actions-href]\n[![][packagephobia-src]][packagephobia-href]\n<!-- [![npm downloads][npm-downloads-src]][npm-downloads-href] -->\n<!-- [![Codecov][codecov-src]][codecov-href] -->\n\nA redistribution of [node-fetch v3](https://github.com/node-fetch/node-fetch) for better backward and forward compatibility.\n\n**Why this package?**\n\n- We can no longer `require('node-fetch')` with latest version. This stopped popular libraries from upgrading and dependency conflicts between `node-fetch@2` and `node-fetch@3`.\n- With upcoming versions of Node.js, native `fetch` is being supported. We are prepared for native fetch support using this package yet keep supporting older Node versions.\n\n**Features:**\n\nâœ… Prefer to **native globals** when available (See Node.js [experimental fetch](https://nodejs.org/dist/latest-v17.x/docs/api/cli.html#--experimental-fetch)).\n\nâœ… Compact build and less install size with **zero dependencies** [![][packagephobia-s-src]][packagephobia-s-href] <sup>vs</sup> [![][packagephobia-s-alt-src]][packagephobia-s-alt-href]\n\nâœ… Support both **CommonJS** (`require`) and **ESM** (`import`) usage\n\nâœ… Use native version if imported without `node` condition using [conditional exports](https://nodejs.org/api/packages.html#packages_conditional_exports) with **zero bundle overhead**\n\nâœ… Polyfill support for Node.js\n\n## Usage\n\nInstall `node-fetch-native` dependency:\n\n```sh\n# npm\nnpm i node-fetch-native\n\n# yarn\nyarn add node-fetch-native\n\n# pnpm\npnpm i node-fetch-native\n```\n\nYou can now either import or require the dependency:\n\n```js\n// ESM\nimport fetch from 'node-fetch-native'\n\n// CommonJS\nconst fetch = require('node-fetch-native')\n```\n\nMore named exports:\n\n```js\n// ESM\nimport { fetch, Blob, FormData, Headers, Request, Response, AbortController } from 'node-fetch-native'\n\n// CommonJS\nconst { fetch, Blob, FormData, Headers, Request, Response, AbortController } = require('node-fetch-native')\n```\n\n## Force using non-native version\n\nSometimes you want to explicitly use none native (`node-fetch`) implementation of `fetch` in case of issues with native/polyfill version of `globalThis.fetch` with Node.js or runtime environment.\n\nYou have two ways to do this:\n\n- Set `FORCE_NODE_FETCH` environment variable before starting application.\n- Import from `node-fetch-native/node`\n\n## Polyfill support\n\nUsing the polyfill method, we can once ensure global fetch is available in the environment and all files. Natives are always preferred.\n\n**Note:** I don't recommand this if you are authoring a library! Please prefer explicit methods.\n\n```js\n// ESM\nimport 'node-fetch-native/polyfill'\n\n// CJS\nrequire('node-fetch-native/polyfill')\n\n// You can now use fetch() without any import!\n```\n\n## Alias to `node-fetch`\n\nUsing this method, you can ensure all project dependencies and usages of `node-fetch` can benefit from improved `node-fetch-native` and won't conflict between `node-fetch@2` and `node-fetch@3`.\n\n### npm\n\nUsing npm [overrides](https://docs.npmjs.com/cli/v8/configuring-npm/package-json#overrides):\n\n```jsonc\n// package.json\n{\n  \"overrides\": {\n    \"node-fetch\": \"npm:node-fetch-native@latest\"\n  }\n}\n```\n\n### yarn\n\nUsing yarn [selective dependency resolutions](https://classic.yarnpkg.com/lang/en/docs/selective-version-resolutions/):\n\n```jsonc\n// package.json\n{\n  \"resolutions\": {\n    \"node-fetch\": \"npm:node-fetch-native@latest\"\n  }\n}\n```\n\n### pnpm\n\nUsing [pnpm.overrides](https://pnpm.io/package_json#pnpmoverrides):\n\n```jsonc\n// package.json\n{\n  \"pnpm\": {\n    \"overrides\": {\n      \"node-fetch\": \"npm:node-fetch-native@latest\"\n    }\n  }\n}\n```\n\n## License\n\nMade with ðŸ’›\n\n[node-fetch is published under the MIT license](https://github.com/node-fetch/node-fetch/blob/main/LICENSE.md)\n\n<!-- Badges -->\n[npm-version-src]: https://flat.badgen.net/npm/v/node-fetch-native\n[npm-version-href]: https://npmjs.com/package/node-fetch-native\n\n[npm-downloads-src]: https://flat.badgen.net/npm/dm/node-fetch-native\n[npm-downloads-href]: https://npmjs.com/package/node-fetch-native\n\n[github-actions-src]: https://flat.badgen.net/github/checks/unjs/node-fetch-native\n[github-actions-href]: https://github.com/unjs/node-fetch-native/actions?query=workflow%3Aci\n\n[packagephobia-src]: https://flat.badgen.net/packagephobia/install/node-fetch-native\n[packagephobia-href]: https://packagephobia.com/result?p=node-fetch-native\n\n[packagephobia-s-src]: https://flat.badgen.net/packagephobia/install/node-fetch-native?label=node-fetch-native&scale=.9\n[packagephobia-s-href]: https://packagephobia.com/result?p=node-fetch-native\n\n[packagephobia-s-alt-src]: https://flat.badgen.net/packagephobia/install/node-fetch?label=node-fetch&scale=.9\n[packagephobia-s-alt-href]: https://packagephobia.com/result?p=node-fetch\n",
    "licenseText": "MIT License\n\nCopyright (c) Pooya Parsa <pooya@pi0.io>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/node-fetch-native/-/node-fetch-native-1.4.0.tgz#fbe8ac033cb6aa44bd106b5e4fd2b6277ba70fa1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/node-fetch-native/-/node-fetch-native-1.4.0.tgz",
    "hash": "fbe8ac033cb6aa44bd106b5e4fd2b6277ba70fa1",
    "integrity": "sha512-F5kfEj95kX8tkDhUCYdV8dg3/8Olx/94zB8+ZNthFs6Bz31UpUi8Xh40TN3thLwXgrwXry1pEg9lJ++tLWTcqA==",
    "registry": "npm",
    "packageName": "node-fetch-native",
    "cacheIntegrity": "sha512-F5kfEj95kX8tkDhUCYdV8dg3/8Olx/94zB8+ZNthFs6Bz31UpUi8Xh40TN3thLwXgrwXry1pEg9lJ++tLWTcqA== sha1-++isAzy2qkS9EGteT9K2J3unD6E="
  },
  "registry": "npm",
  "hash": "fbe8ac033cb6aa44bd106b5e4fd2b6277ba70fa1"
}