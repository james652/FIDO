{
  "manifest": {
    "name": "std-env",
    "version": "3.4.3",
    "description": "Runtime agnostic JS utils",
    "repository": {
      "type": "git",
      "url": "https://github.com/unjs/std-env.git"
    },
    "license": "MIT",
    "sideEffects": false,
    "exports": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.mjs",
      "require": "./dist/index.cjs"
    },
    "main": "./dist/index.cjs",
    "types": "./dist/index.d.ts",
    "files": [
      "dist"
    ],
    "scripts": {
      "build": "unbuild",
      "dev": "vitest",
      "lint": "eslint --ext .ts . && prettier -c src test",
      "lint:fix": "eslint --fix --ext .ts . && prettier -w src test",
      "prepack": "unbuild",
      "play:bun": "bun playground/bun.ts",
      "play:deno": "pnpm build && deno run -A playground/deno.ts",
      "play:node": "pnpm build && node playground/node.mjs",
      "release": "pnpm test && changelogen --release && npm publish && git push --follow-tags",
      "test": "pnpm lint && pnpm typecheck && vitest run --coverage",
      "typecheck": "tsc --noEmit"
    },
    "devDependencies": {
      "@types/node": "^20.5.3",
      "@vitest/coverage-v8": "^0.34.2",
      "changelogen": "^0.5.5",
      "esbuild": "^0.19.2",
      "eslint": "^8.47.0",
      "eslint-config-unjs": "^0.2.1",
      "jiti": "^1.19.3",
      "prettier": "^3.0.2",
      "rollup": "^3.28.1",
      "typescript": "^5.1.6",
      "unbuild": "^2.0.0",
      "vitest": "^0.34.2"
    },
    "packageManager": "pnpm@8.6.12",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-std-env-3.4.3-326f11db518db751c83fd58574f449b7c3060910-integrity/node_modules/std-env/package.json",
    "readmeFilename": "README.md",
    "readme": "# std-env\n\n[![npm](https://img.shields.io/npm/dm/std-env.svg?style=flat-square)](http://npmjs.com/package/std-env)\n[![npm](https://img.shields.io/npm/v/std-env.svg?style=flat-square)](http://npmjs.com/package/std-env)\n[![bundlephobia](https://img.shields.io/bundlephobia/min/std-env/latest.svg?style=flat-square)](https://bundlephobia.com/result?p=std-env)\n\n> Runtime agnostic JS utils\n\n## Installation\n\n```sh\n# Using npm\nnpm i std-env\n\n# Using pnpm\npnpm i std-env\n\n# Using yarn\nyarn add std-env\n```\n\n## Usage\n\n```js\n// ESM\nimport { env, isDevelopment, isProduction } from \"std-env\";\n\n// CommonJS\nconst { env, isDevelopment, isProduction } = require(\"std-env\");\n```\n\n## Flags\n\n- `hasTTY`\n- `hasWindow`\n- `isDebug`\n- `isDevelopment`\n- `isLinux`\n- `isMacOS`\n- `isMinimal`\n- `isProduction`\n- `isTest`\n- `isWindows`\n- `platform`\n- `isColorSupported`\n- `nodeVersion`\n- `nodeMajorVersion`\n\nYou can read more about how each flag works from [./src/flags.ts](./src/flags.ts).\n\n## Provider Detection\n\n`std-env` can automatically detect the current runtime provider based on environment variables.\n\nYou can use `isCI` and `platform` exports to detect it:\n\n```ts\nimport { isCI, provider, providerInfo } from \"std-env\";\n\nconsole.log({\n  isCI, // true\n  provider, // \"github_actions\"\n  providerInfo, // { name: \"github_actions\", isCI: true }\n});\n```\n\nList of well known providers can be found from [./src/providers.ts](./src/providers.ts).\n\n## Runtime Detection\n\n`std-env` can automatically detect the current JavaScript runtime based on global variables, following the [WinterCG Runtime Keys proposal](https://runtime-keys.proposal.wintercg.org/):\n\n```ts\nimport { runtime, runtimeInfo } from \"std-env\";\n\n// \"\" | \"node\" | \"deno\" | \"bun\" | \"workerd\" | \"lagon\" ...\nconsole.log(runtime);\n\n// { name: \"node\" }\nconsole.log(runtimeInfo);\n```\n\nYou can also use individual named exports for each runtime detection:\n\n- `isNetlify`\n- `isEdgeLight`\n- `isWorkerd`\n- `isDeno`\n- `isLagon`\n- `isNode`\n- `isBun`\n- `isFastly`\n\nList of well known providers can be found from [./src/runtimes.ts](./src/runtimes.ts).\n\n## Platform-Agnostic `env`\n\n`std-env` provides a lightweight proxy to access environment variables in a platform agnostic way.\n\n```ts\nimport { env } from \"std-env\";\n```\n\n## Platform-Agnostic `process`\n\n`std-env` provides a lightweight proxy to access [`process`](https://nodejs.org/api/process.html) object in a platform agnostic way.\n\n```ts\nimport { process } from \"std-env\";\n```\n\n## License\n\nMIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/std-env/-/std-env-3.4.3.tgz#326f11db518db751c83fd58574f449b7c3060910",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/std-env/-/std-env-3.4.3.tgz",
    "hash": "326f11db518db751c83fd58574f449b7c3060910",
    "integrity": "sha512-f9aPhy8fYBuMN+sNfakZV18U39PbalgjXG3lLB9WkaYTxijru61wb57V9wxxNthXM5Sd88ETBWi29qLAsHO52Q==",
    "registry": "npm",
    "packageName": "std-env",
    "cacheIntegrity": "sha512-f9aPhy8fYBuMN+sNfakZV18U39PbalgjXG3lLB9WkaYTxijru61wb57V9wxxNthXM5Sd88ETBWi29qLAsHO52Q== sha1-Mm8R21GNt1HIP9WFdPRJt8MGCRA="
  },
  "registry": "npm",
  "hash": "326f11db518db751c83fd58574f449b7c3060910"
}